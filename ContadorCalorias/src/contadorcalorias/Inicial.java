/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package contadorcalorias;

import java.awt.event.KeyEvent;
import java.sql.*;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Natalia
 */
public class Inicial extends javax.swing.JFrame {

    public boolean login = false;
    
    /**
     * Creates new form Inicial
     */
    public Inicial() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupPeriodo = new javax.swing.ButtonGroup();
        jTextField13 = new javax.swing.JTextField();
        popupMenu1 = new java.awt.PopupMenu();
        buttonGroupPeriodoExercicio = new javax.swing.ButtonGroup();
        jScrollPane16 = new javax.swing.JScrollPane();
        jTextArea12 = new javax.swing.JTextArea();
        painelFigura = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        painelDiario = new javax.swing.JLayeredPane();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        campoUsuarioDiario = new javax.swing.JTextField();
        campoDiaDiario = new javax.swing.JTextField();
        buttonVoltarDiario = new javax.swing.JButton();
        jLabel67 = new javax.swing.JLabel();
        jLabel68 = new javax.swing.JLabel();
        jLabel69 = new javax.swing.JLabel();
        jLabel70 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        buttonAvancarDiario = new javax.swing.JButton();
        bottonAnteriorDiario = new javax.swing.JButton();
        jSeparator10 = new javax.swing.JSeparator();
        jScrollPane11 = new javax.swing.JScrollPane();
        jTableNoite = new javax.swing.JTable();
        jSeparator15 = new javax.swing.JSeparator();
        jSeparator16 = new javax.swing.JSeparator();
        jScrollPane12 = new javax.swing.JScrollPane();
        jTableManha = new javax.swing.JTable();
        jScrollPane13 = new javax.swing.JScrollPane();
        jTableTarde = new javax.swing.JTable();
        painelListaAlimentos = new javax.swing.JLayeredPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        buttonInserirNovo = new javax.swing.JButton();
        buttonVoltarLista = new javax.swing.JButton();
        buttonEscolher = new javax.swing.JButton();
        painelAjuda = new javax.swing.JLayeredPane();
        jScrollPane5 = new javax.swing.JScrollPane();
        areaAjuda = new javax.swing.JTextArea();
        painelInicial = new javax.swing.JLayeredPane();
        jLabel2 = new javax.swing.JLabel();
        campoNomePerfil = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        campoPesoPerfil = new javax.swing.JTextField();
        campoAlturaPerfil = new javax.swing.JTextField();
        campoIdadePerfil = new javax.swing.JTextField();
        campoSexoPerfil = new javax.swing.JTextField();
        campoObjPerfil = new javax.swing.JTextField();
        campoTendenciaPerfil = new javax.swing.JTextField();
        campoBasalPerfil = new javax.swing.JTextField();
        campoProteinaGPerfil = new javax.swing.JTextField();
        campoProteinaKPerfil = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        campoCarboGPerfil = new javax.swing.JTextField();
        campoCarboKPerfil = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        campoGorduraGPerfil = new javax.swing.JTextField();
        campoGorduraKPerfil = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        buttonMaisAlimento = new javax.swing.JButton();
        buttonMaisExercicio = new javax.swing.JButton();
        painelAddAlimento = new javax.swing.JLayeredPane();
        jLabel19 = new javax.swing.JLabel();
        radioManha = new javax.swing.JRadioButton();
        radioTarde = new javax.swing.JRadioButton();
        radioNoite = new javax.swing.JRadioButton();
        jLabel20 = new javax.swing.JLabel();
        campoHora = new javax.swing.JFormattedTextField();
        jLabel21 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        campoAlimento = new javax.swing.JTextArea();
        jLabel22 = new javax.swing.JLabel();
        campoKcal = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        campoCarboGAdd = new javax.swing.JTextField();
        campoProteinaGAdd = new javax.swing.JTextField();
        campoGorduraGAdd = new javax.swing.JTextField();
        buttonLimparAdd = new javax.swing.JButton();
        buttonSalvarAdd = new javax.swing.JButton();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        campoDia = new javax.swing.JFormattedTextField();
        jLabel31 = new javax.swing.JLabel();
        campoQntd = new javax.swing.JTextField();
        jLabel62 = new javax.swing.JLabel();
        buttonListaAimentos = new javax.swing.JButton();
        jLabel66 = new javax.swing.JLabel();
        campoPorcao = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        painelAddExercicio = new javax.swing.JLayeredPane();
        jLabel26 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        radioManhaExercicio = new javax.swing.JRadioButton();
        radioTardeExercicio = new javax.swing.JRadioButton();
        radioNoiteExercicio = new javax.swing.JRadioButton();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        campoDataExercicio = new javax.swing.JFormattedTextField();
        campoHorarioExercicio = new javax.swing.JFormattedTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        campoExercicio = new javax.swing.JTextArea();
        campoQntdExercicio = new javax.swing.JTextField();
        campoKcalExercicio = new javax.swing.JTextField();
        buttonLimparExercicio = new javax.swing.JButton();
        buttonSalvarExercicio = new javax.swing.JButton();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        buttonDiario = new javax.swing.JButton();
        campoDatadeHoje = new javax.swing.JFormattedTextField();
        buttonAvanco = new javax.swing.JButton();
        buttonAnterior = new javax.swing.JButton();
        campoKcalConsumida = new javax.swing.JTextField();
        campoProteinaGConsumida = new javax.swing.JTextField();
        campoProteinaKConsumida = new javax.swing.JTextField();
        campoCarboGConsumida = new javax.swing.JTextField();
        campoCarboKConsumida = new javax.swing.JTextField();
        campoGorduraGConsumida = new javax.swing.JTextField();
        campoGorduraKConsumida = new javax.swing.JTextField();
        jLabel45 = new javax.swing.JLabel();
        campoKcalGasta = new javax.swing.JTextField();
        jLabel46 = new javax.swing.JLabel();
        campoKcalTotal = new javax.swing.JTextField();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jSeparator8 = new javax.swing.JSeparator();
        jLabel50 = new javax.swing.JLabel();
        campoKcalRestante = new javax.swing.JTextField();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        campoCarboRestante = new javax.swing.JTextField();
        campoProteinaRestante = new javax.swing.JTextField();
        campoGorduraRestante = new javax.swing.JTextField();
        jLabel57 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        jSeparator9 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        areaAviso = new javax.swing.JTextArea();
        jLabel63 = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        campoNivelPerfil = new javax.swing.JTextField();
        jLabel65 = new javax.swing.JLabel();
        campoMetodoPerfil = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuAdicionarCadastro = new javax.swing.JMenu();
        menuEntrar = new javax.swing.JMenu();
        menuAdicionar = new javax.swing.JMenu();
        menuAjuda = new javax.swing.JMenu();
        menuManual = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        menuLogout = new javax.swing.JMenu();
        menuSair = new javax.swing.JMenu();

        jTextField13.setText("jTextField11");

        popupMenu1.setLabel("popupMenu1");

        jTextArea12.setColumns(20);
        jTextArea12.setRows(5);
        jScrollPane16.setViewportView(jTextArea12);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Contador de Calorias");

        painelFigura.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\Natalia\\Documents\\NetBeansProjects\\ContadorCalorias\\calorias_diarias.gif")); // NOI18N
        jLabel1.setText("jLabel1");

        javax.swing.GroupLayout painelFiguraLayout = new javax.swing.GroupLayout(painelFigura);
        painelFigura.setLayout(painelFiguraLayout);
        painelFiguraLayout.setHorizontalGroup(
            painelFiguraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelFiguraLayout.createSequentialGroup()
                .addGap(427, 427, 427)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(450, Short.MAX_VALUE))
        );
        painelFiguraLayout.setVerticalGroup(
            painelFiguraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelFiguraLayout.createSequentialGroup()
                .addContainerGap(182, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(157, 157, 157))
        );

        jLabel38.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        jLabel38.setText("Perfil:");
        jLabel38.setBounds(120, 20, 60, 30);
        painelDiario.add(jLabel38, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel39.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        jLabel39.setText("Dia");
        jLabel39.setBounds(540, 30, 40, 30);
        painelDiario.add(jLabel39, javax.swing.JLayeredPane.DEFAULT_LAYER);

        campoUsuarioDiario.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        campoUsuarioDiario.setBounds(180, 20, 140, 30);
        painelDiario.add(campoUsuarioDiario, javax.swing.JLayeredPane.DEFAULT_LAYER);

        campoDiaDiario.setBackground(new java.awt.Color(192, 192, 231));
        campoDiaDiario.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        campoDiaDiario.setBounds(500, 60, 120, 30);
        painelDiario.add(campoDiaDiario, javax.swing.JLayeredPane.DEFAULT_LAYER);

        buttonVoltarDiario.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        buttonVoltarDiario.setText("< Diário");
        buttonVoltarDiario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonVoltarDiarioMouseClicked(evt);
            }
        });
        buttonVoltarDiario.setBounds(10, 10, 90, 40);
        painelDiario.add(buttonVoltarDiario, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel67.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        jLabel67.setText("Período");
        jLabel67.setBounds(30, 80, 70, 30);
        painelDiario.add(jLabel67, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel68.setFont(new java.awt.Font("Trebuchet MS", 0, 16)); // NOI18N
        jLabel68.setText("Manha");
        jLabel68.setBounds(40, 190, 44, 19);
        painelDiario.add(jLabel68, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel69.setFont(new java.awt.Font("Trebuchet MS", 0, 16)); // NOI18N
        jLabel69.setText("Tarde");
        jLabel69.setBounds(40, 370, 41, 19);
        painelDiario.add(jLabel69, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel70.setFont(new java.awt.Font("Trebuchet MS", 0, 16)); // NOI18N
        jLabel70.setText("Noite");
        jLabel70.setBounds(40, 550, 39, 19);
        painelDiario.add(jLabel70, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jSeparator4.setBounds(10, 110, 1110, 10);
        painelDiario.add(jSeparator4, javax.swing.JLayeredPane.DEFAULT_LAYER);

        buttonAvancarDiario.setText(">");
        buttonAvancarDiario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonAvancarDiarioMouseClicked(evt);
            }
        });
        buttonAvancarDiario.setBounds(620, 60, 50, 30);
        painelDiario.add(buttonAvancarDiario, javax.swing.JLayeredPane.DEFAULT_LAYER);

        bottonAnteriorDiario.setText("<");
        bottonAnteriorDiario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bottonAnteriorDiarioMouseClicked(evt);
            }
        });
        bottonAnteriorDiario.setBounds(450, 60, 50, 30);
        painelDiario.add(bottonAnteriorDiario, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jSeparator10.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator10.setBounds(110, 80, 10, 560);
        painelDiario.add(jSeparator10, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jTableNoite.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Horário", "Alimento", "Kcal", "Carboidrato", "Proteína", "Gordura"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane11.setViewportView(jTableNoite);
        jTableNoite.getColumnModel().getColumn(0).setMinWidth(90);
        jTableNoite.getColumnModel().getColumn(0).setPreferredWidth(90);
        jTableNoite.getColumnModel().getColumn(0).setMaxWidth(90);
        jTableNoite.getColumnModel().getColumn(2).setMinWidth(90);
        jTableNoite.getColumnModel().getColumn(2).setPreferredWidth(90);
        jTableNoite.getColumnModel().getColumn(2).setMaxWidth(90);
        jTableNoite.getColumnModel().getColumn(3).setMinWidth(90);
        jTableNoite.getColumnModel().getColumn(3).setPreferredWidth(90);
        jTableNoite.getColumnModel().getColumn(3).setMaxWidth(90);
        jTableNoite.getColumnModel().getColumn(4).setMinWidth(90);
        jTableNoite.getColumnModel().getColumn(4).setPreferredWidth(90);
        jTableNoite.getColumnModel().getColumn(4).setMaxWidth(90);
        jTableNoite.getColumnModel().getColumn(5).setMinWidth(90);
        jTableNoite.getColumnModel().getColumn(5).setPreferredWidth(90);
        jTableNoite.getColumnModel().getColumn(5).setMaxWidth(90);

        jScrollPane11.setBounds(120, 480, 980, 160);
        painelDiario.add(jScrollPane11, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jSeparator15.setBounds(10, 290, 1110, 10);
        painelDiario.add(jSeparator15, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jSeparator16.setBounds(10, 470, 1110, 10);
        painelDiario.add(jSeparator16, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jTableManha.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Horário", "Alimento", "Kcal", "Carboidrato", "Proteína", "Gordura"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane12.setViewportView(jTableManha);
        jTableManha.getColumnModel().getColumn(0).setMinWidth(90);
        jTableManha.getColumnModel().getColumn(0).setPreferredWidth(90);
        jTableManha.getColumnModel().getColumn(0).setMaxWidth(90);
        jTableManha.getColumnModel().getColumn(2).setMinWidth(90);
        jTableManha.getColumnModel().getColumn(2).setPreferredWidth(90);
        jTableManha.getColumnModel().getColumn(2).setMaxWidth(90);
        jTableManha.getColumnModel().getColumn(3).setMinWidth(90);
        jTableManha.getColumnModel().getColumn(3).setPreferredWidth(90);
        jTableManha.getColumnModel().getColumn(3).setMaxWidth(90);
        jTableManha.getColumnModel().getColumn(4).setMinWidth(90);
        jTableManha.getColumnModel().getColumn(4).setPreferredWidth(90);
        jTableManha.getColumnModel().getColumn(4).setMaxWidth(90);
        jTableManha.getColumnModel().getColumn(5).setMinWidth(90);
        jTableManha.getColumnModel().getColumn(5).setPreferredWidth(90);
        jTableManha.getColumnModel().getColumn(5).setMaxWidth(90);

        jScrollPane12.setBounds(120, 120, 980, 160);
        painelDiario.add(jScrollPane12, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jTableTarde.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Horário", "Alimento", "Kcal", "Carboidrato", "Proteína", "Gordura"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane13.setViewportView(jTableTarde);
        jTableTarde.getColumnModel().getColumn(0).setMinWidth(90);
        jTableTarde.getColumnModel().getColumn(0).setPreferredWidth(90);
        jTableTarde.getColumnModel().getColumn(0).setMaxWidth(90);
        jTableTarde.getColumnModel().getColumn(2).setMinWidth(90);
        jTableTarde.getColumnModel().getColumn(2).setPreferredWidth(90);
        jTableTarde.getColumnModel().getColumn(2).setMaxWidth(90);
        jTableTarde.getColumnModel().getColumn(3).setMinWidth(90);
        jTableTarde.getColumnModel().getColumn(3).setPreferredWidth(90);
        jTableTarde.getColumnModel().getColumn(3).setMaxWidth(90);
        jTableTarde.getColumnModel().getColumn(4).setMinWidth(90);
        jTableTarde.getColumnModel().getColumn(4).setPreferredWidth(90);
        jTableTarde.getColumnModel().getColumn(4).setMaxWidth(90);
        jTableTarde.getColumnModel().getColumn(5).setMinWidth(90);
        jTableTarde.getColumnModel().getColumn(5).setPreferredWidth(90);
        jTableTarde.getColumnModel().getColumn(5).setMaxWidth(90);

        jScrollPane13.setBounds(120, 300, 980, 160);
        painelDiario.add(jScrollPane13, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jTable1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTable1.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Porção", "Nome", "Marca", "Kcal", "Carboidrato", "Proteina", "Gordura"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(jTable1);
        jTable1.getColumnModel().getColumn(0).setMinWidth(150);
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(150);
        jTable1.getColumnModel().getColumn(0).setMaxWidth(150);
        jTable1.getColumnModel().getColumn(1).setMinWidth(200);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(200);
        jTable1.getColumnModel().getColumn(2).setMinWidth(150);
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(150);
        jTable1.getColumnModel().getColumn(2).setMaxWidth(150);
        jTable1.getColumnModel().getColumn(3).setMinWidth(90);
        jTable1.getColumnModel().getColumn(3).setPreferredWidth(90);
        jTable1.getColumnModel().getColumn(3).setMaxWidth(90);
        jTable1.getColumnModel().getColumn(4).setMinWidth(90);
        jTable1.getColumnModel().getColumn(4).setPreferredWidth(90);
        jTable1.getColumnModel().getColumn(4).setMaxWidth(90);
        jTable1.getColumnModel().getColumn(5).setMinWidth(90);
        jTable1.getColumnModel().getColumn(5).setPreferredWidth(90);
        jTable1.getColumnModel().getColumn(5).setMaxWidth(90);
        jTable1.getColumnModel().getColumn(6).setMinWidth(90);
        jTable1.getColumnModel().getColumn(6).setPreferredWidth(90);
        jTable1.getColumnModel().getColumn(6).setMaxWidth(90);

        jScrollPane3.setBounds(60, 90, 1010, 490);
        painelListaAlimentos.add(jScrollPane3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        buttonInserirNovo.setText("+ Inserir Alimento");
        buttonInserirNovo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonInserirNovoMouseClicked(evt);
            }
        });
        buttonInserirNovo.setBounds(893, 20, 180, 40);
        painelListaAlimentos.add(buttonInserirNovo, javax.swing.JLayeredPane.DEFAULT_LAYER);

        buttonVoltarLista.setText("< VOLTAR");
        buttonVoltarLista.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonVoltarListaMouseClicked(evt);
            }
        });
        buttonVoltarLista.setBounds(60, 20, 140, 40);
        painelListaAlimentos.add(buttonVoltarLista, javax.swing.JLayeredPane.DEFAULT_LAYER);

        buttonEscolher.setText("OK");
        buttonEscolher.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonEscolherMouseClicked(evt);
            }
        });
        buttonEscolher.setBounds(510, 600, 110, 40);
        painelListaAlimentos.add(buttonEscolher, javax.swing.JLayeredPane.DEFAULT_LAYER);

        areaAjuda.setEditable(false);
        areaAjuda.setBackground(new java.awt.Color(225, 224, 224));
        areaAjuda.setColumns(20);
        areaAjuda.setRows(5);
        areaAjuda.setText("\t\t\t\t\t***** MANUAL DE USO DO SOFTWARE BALANÇA DIGITAL *****\n\n==========================================================================================================================================================\n\n****** -> MÉTODOS DE CÁLCULO: Nesse programa existem dois métodos de cálculo para definir suas quantidades de nutrientes diários.\n\n\n** 1-) O método de LAYNE NORTON: Este método é recomendado para pessoas que já estão sob um treinamento intenso.\n \n+ PASSO 1 - Cálculo do Metabolismo Basal: \n\n\tO cálculo do metabolismo basal feito pelo método de Layne Norton se dá pela seguinte fórmula:\n\tQuantidade de Calorias Total diárias = [SEU PESO x SUA TENDÊNCIA x SEU OBJETIVO].\n\nSe você tem tendência a ser magro : valor da multiplicação = 37.\nSe você tem tendência a ser gordo : valor da multiplicação = 29.\nSe você tem tendência a ser atlético: valor da multiplicação = 33.\n\nSe o seu objetivo é de perda de peso : valor da multiplicação = 0,85.\nSe o seu objetivo é de ganho de masa : valor da multiplicação = 1.1.\n\nTendo em mãos o valor do seu Metabolismo Basal, sabemos a quantidade de calorias que você deve ingerir por dia.\n\n\n+ PASSO 2 - Cálculo da quantidade diária de PROTEÍNA:\n\n\tPara calcular a quantidade de proteina em grama que você deve ingerir diariamente, multiplicamos seu peso em quilos por 2,5.\n\tQuantidade de proteina em grama = [SEU PESO x 2,5].\n\n\n+ PASSO 3 - Cálculo da quantidade diária de GORDURA:\n\n\tA quantidade de gordura que você deve ingerir por dia segundo o método de Layne Norton é de 20% do valor total de c\nalorias ingeridas por dia. Ou seja, 20% do seu metabolismo basal calculado acima. Para fazer esse calculo usamos a seguinte formula:\n\tQuantidade de gordura em kcal = [0,2 x METABOLISMO BASAL].\n\tEsse resultado nos dá a quantidade em KCAL, para saber a quantidade em gramas, basta dividir o valor encontrado por 9,3 (valor\ncalorico de um grama de gordura).\n\n\n+ PASSO 4 - Cálculo da quantidade diária de CARBOIDRATO:\n\n\tAssim que as quantidadeS de proteína e gordura são definidas, basta complementar o restante da necessidade calórica com os \ncarboidratos. Fazemos esse cálculo da seguinte maneira:\n\tQuantidade de carboidrato em Kcal = [BASAL - (GORDURA + (PROTEINA x 4,3))].\n\tAtravés dessa formula obtemos o valor diário de carboidrato em Kcal, para saber a quantidade respectiva em gramas basta \nmultiplicar o valor encontrado por 4,1 (valor calórico de um grama de carboidrato).\n\tNa formula acima, multiplica-se o valor da proteina por 4,3 para saber a quantidade em Kcal, e não em gramas como foi calculado\npreviamente.\n\n\n\tPor fim está feito todos os cálculos das necessidades diárias do usuário através do método de Layne Norton.\n\n\n\n** 2-) O método de HARRYS - BENNEDICT: Este método é recomendado para todos os tipos de perfis.\n \n+ PASSO 1 - Calculo do Metabolismo basal:\n\n\tO cálculo do metabolismo basal ");
        jScrollPane5.setViewportView(areaAjuda);

        jScrollPane5.setBounds(10, 10, 1110, 630);
        painelAjuda.add(jScrollPane5, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel2.setFont(new java.awt.Font("Trebuchet MS", 0, 16)); // NOI18N
        jLabel2.setText("PERFIL:");
        jLabel2.setBounds(10, 20, 60, 30);
        painelInicial.add(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        campoNomePerfil.setEditable(false);
        campoNomePerfil.setFont(new java.awt.Font("Trebuchet MS", 2, 16)); // NOI18N
        campoNomePerfil.setBounds(70, 20, 220, 30);
        painelInicial.add(campoNomePerfil, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel3.setFont(new java.awt.Font("Trebuchet MS", 0, 16)); // NOI18N
        jLabel3.setText("Peso:");
        jLabel3.setBounds(10, 70, 40, 30);
        painelInicial.add(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel4.setFont(new java.awt.Font("Trebuchet MS", 0, 16)); // NOI18N
        jLabel4.setText("Altura:");
        jLabel4.setBounds(150, 70, 47, 30);
        painelInicial.add(jLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel5.setFont(new java.awt.Font("Trebuchet MS", 0, 16)); // NOI18N
        jLabel5.setText("Idade:");
        jLabel5.setBounds(10, 130, 50, 30);
        painelInicial.add(jLabel5, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel6.setFont(new java.awt.Font("Trebuchet MS", 0, 16)); // NOI18N
        jLabel6.setText("Sexo:");
        jLabel6.setBounds(160, 130, 40, 30);
        painelInicial.add(jLabel6, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel7.setFont(new java.awt.Font("Trebuchet MS", 0, 16)); // NOI18N
        jLabel7.setText("Objetivo:");
        jLabel7.setBounds(10, 190, 70, 30);
        painelInicial.add(jLabel7, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel8.setFont(new java.awt.Font("Trebuchet MS", 0, 16)); // NOI18N
        jLabel8.setText("Método de Cálculo:");
        jLabel8.setBounds(10, 370, 138, 30);
        painelInicial.add(jLabel8, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel9.setFont(new java.awt.Font("Trebuchet MS", 0, 16)); // NOI18N
        jLabel9.setText("Metabolismo Basal:");
        jLabel9.setBounds(10, 450, 140, 30);
        painelInicial.add(jLabel9, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel10.setFont(new java.awt.Font("Trebuchet MS", 0, 16)); // NOI18N
        jLabel10.setText("Preteínas:");
        jLabel10.setBounds(30, 560, 80, 30);
        painelInicial.add(jLabel10, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel11.setFont(new java.awt.Font("Trebuchet MS", 0, 16)); // NOI18N
        jLabel11.setText("Carboidratos:");
        jLabel11.setBounds(10, 510, 100, 30);
        painelInicial.add(jLabel11, javax.swing.JLayeredPane.DEFAULT_LAYER);

        campoPesoPerfil.setEditable(false);
        campoPesoPerfil.setFont(new java.awt.Font("Trebuchet MS", 2, 16)); // NOI18N
        campoPesoPerfil.setBounds(60, 70, 80, 30);
        painelInicial.add(campoPesoPerfil, javax.swing.JLayeredPane.DEFAULT_LAYER);

        campoAlturaPerfil.setEditable(false);
        campoAlturaPerfil.setFont(new java.awt.Font("Trebuchet MS", 2, 16)); // NOI18N
        campoAlturaPerfil.setBounds(200, 70, 90, 30);
        painelInicial.add(campoAlturaPerfil, javax.swing.JLayeredPane.DEFAULT_LAYER);

        campoIdadePerfil.setEditable(false);
        campoIdadePerfil.setFont(new java.awt.Font("Trebuchet MS", 2, 16)); // NOI18N
        campoIdadePerfil.setBounds(60, 130, 80, 30);
        painelInicial.add(campoIdadePerfil, javax.swing.JLayeredPane.DEFAULT_LAYER);

        campoSexoPerfil.setEditable(false);
        campoSexoPerfil.setFont(new java.awt.Font("Trebuchet MS", 2, 16)); // NOI18N
        campoSexoPerfil.setBounds(200, 130, 90, 30);
        painelInicial.add(campoSexoPerfil, javax.swing.JLayeredPane.DEFAULT_LAYER);

        campoObjPerfil.setEditable(false);
        campoObjPerfil.setFont(new java.awt.Font("Trebuchet MS", 2, 16)); // NOI18N
        campoObjPerfil.setBounds(80, 190, 210, 30);
        painelInicial.add(campoObjPerfil, javax.swing.JLayeredPane.DEFAULT_LAYER);

        campoTendenciaPerfil.setEditable(false);
        campoTendenciaPerfil.setFont(new java.awt.Font("Trebuchet MS", 2, 16)); // NOI18N
        campoTendenciaPerfil.setBounds(90, 250, 200, 30);
        painelInicial.add(campoTendenciaPerfil, javax.swing.JLayeredPane.DEFAULT_LAYER);

        campoBasalPerfil.setEditable(false);
        campoBasalPerfil.setFont(new java.awt.Font("Trebuchet MS", 2, 16)); // NOI18N
        campoBasalPerfil.setBounds(150, 450, 110, 30);
        painelInicial.add(campoBasalPerfil, javax.swing.JLayeredPane.DEFAULT_LAYER);

        campoProteinaGPerfil.setEditable(false);
        campoProteinaGPerfil.setFont(new java.awt.Font("Trebuchet MS", 2, 16)); // NOI18N
        campoProteinaGPerfil.setBounds(110, 560, 60, 30);
        painelInicial.add(campoProteinaGPerfil, javax.swing.JLayeredPane.DEFAULT_LAYER);

        campoProteinaKPerfil.setEditable(false);
        campoProteinaKPerfil.setFont(new java.awt.Font("Trebuchet MS", 2, 16)); // NOI18N
        campoProteinaKPerfil.setBounds(190, 560, 70, 30);
        painelInicial.add(campoProteinaKPerfil, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel12.setFont(new java.awt.Font("Trebuchet MS", 0, 16)); // NOI18N
        jLabel12.setText("Gorduras:");
        jLabel12.setBounds(40, 610, 70, 30);
        painelInicial.add(jLabel12, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel13.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel13.setText("g");
        jLabel13.setBounds(170, 560, 20, 30);
        painelInicial.add(jLabel13, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel14.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel14.setText("Kcal");
        jLabel14.setBounds(260, 450, 40, 30);
        painelInicial.add(jLabel14, javax.swing.JLayeredPane.DEFAULT_LAYER);

        campoCarboGPerfil.setEditable(false);
        campoCarboGPerfil.setFont(new java.awt.Font("Trebuchet MS", 2, 16)); // NOI18N
        campoCarboGPerfil.setBounds(110, 510, 60, 30);
        painelInicial.add(campoCarboGPerfil, javax.swing.JLayeredPane.DEFAULT_LAYER);

        campoCarboKPerfil.setEditable(false);
        campoCarboKPerfil.setFont(new java.awt.Font("Trebuchet MS", 2, 16)); // NOI18N
        campoCarboKPerfil.setBounds(190, 510, 70, 30);
        painelInicial.add(campoCarboKPerfil, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel15.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel15.setText("g");
        jLabel15.setBounds(170, 510, 20, 30);
        painelInicial.add(jLabel15, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel16.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel16.setText("Kcal");
        jLabel16.setBounds(260, 510, 40, 30);
        painelInicial.add(jLabel16, javax.swing.JLayeredPane.DEFAULT_LAYER);

        campoGorduraGPerfil.setEditable(false);
        campoGorduraGPerfil.setFont(new java.awt.Font("Trebuchet MS", 2, 16)); // NOI18N
        campoGorduraGPerfil.setBounds(110, 610, 60, 30);
        painelInicial.add(campoGorduraGPerfil, javax.swing.JLayeredPane.DEFAULT_LAYER);

        campoGorduraKPerfil.setEditable(false);
        campoGorduraKPerfil.setFont(new java.awt.Font("Trebuchet MS", 2, 16)); // NOI18N
        campoGorduraKPerfil.setBounds(190, 610, 70, 30);
        painelInicial.add(campoGorduraKPerfil, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel17.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel17.setText("g");
        jLabel17.setBounds(170, 610, 20, 30);
        painelInicial.add(jLabel17, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel18.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel18.setText("Kcal");
        jLabel18.setBounds(260, 610, 40, 30);
        painelInicial.add(jLabel18, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0)));
        jSeparator2.setBounds(310, 10, 2, 630);
        painelInicial.add(jSeparator2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        buttonMaisAlimento.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        buttonMaisAlimento.setText("+ Alimento");
        buttonMaisAlimento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonMaisAlimentoMouseClicked(evt);
            }
        });
        buttonMaisAlimento.setBounds(340, 20, 110, 60);
        painelInicial.add(buttonMaisAlimento, javax.swing.JLayeredPane.DEFAULT_LAYER);

        buttonMaisExercicio.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        buttonMaisExercicio.setText("+ Exercício");
        buttonMaisExercicio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonMaisExercicioMouseClicked(evt);
            }
        });
        buttonMaisExercicio.setBounds(490, 20, 110, 60);
        painelInicial.add(buttonMaisExercicio, javax.swing.JLayeredPane.DEFAULT_LAYER);

        painelAddAlimento.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel19.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel19.setText("Período:");
        jLabel19.setBounds(20, 110, 69, 21);
        painelAddAlimento.add(jLabel19, javax.swing.JLayeredPane.DEFAULT_LAYER);

        buttonGroupPeriodo.add(radioManha);
        radioManha.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        radioManha.setText("Manha");
        radioManha.setBounds(90, 70, 70, 27);
        painelAddAlimento.add(radioManha, javax.swing.JLayeredPane.DEFAULT_LAYER);

        buttonGroupPeriodo.add(radioTarde);
        radioTarde.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        radioTarde.setText("Tarde");
        radioTarde.setBounds(90, 100, 70, 27);
        painelAddAlimento.add(radioTarde, javax.swing.JLayeredPane.DEFAULT_LAYER);

        buttonGroupPeriodo.add(radioNoite);
        radioNoite.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        radioNoite.setText("Noite");
        radioNoite.setBounds(90, 130, 70, 27);
        painelAddAlimento.add(radioNoite, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel20.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel20.setText("Horário:");
        jLabel20.setBounds(190, 120, 70, 30);
        painelAddAlimento.add(jLabel20, javax.swing.JLayeredPane.DEFAULT_LAYER);

        try {
            campoHora.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        campoHora.setText("HH:MM  ");
        campoHora.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        campoHora.setBounds(260, 120, 90, 30);
        painelAddAlimento.add(campoHora, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel21.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel21.setText("Alimento:");
        jLabel21.setBounds(160, 180, 90, 20);
        painelAddAlimento.add(jLabel21, javax.swing.JLayeredPane.DEFAULT_LAYER);

        campoAlimento.setColumns(20);
        campoAlimento.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        campoAlimento.setRows(5);
        jScrollPane1.setViewportView(campoAlimento);

        jScrollPane1.setBounds(160, 210, 210, 50);
        painelAddAlimento.add(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel22.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel22.setText("Kcal:");
        jLabel22.setBounds(200, 320, 50, 20);
        painelAddAlimento.add(jLabel22, javax.swing.JLayeredPane.DEFAULT_LAYER);

        campoKcal.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        campoKcal.setBounds(260, 320, 70, 30);
        painelAddAlimento.add(campoKcal, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel23.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel23.setText("Carboidratos:");
        jLabel23.setBounds(130, 360, 120, 21);
        painelAddAlimento.add(jLabel23, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel24.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel24.setText("Proteínas:");
        jLabel24.setBounds(160, 400, 100, 21);
        painelAddAlimento.add(jLabel24, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel25.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel25.setText("Gorduras:");
        jLabel25.setBounds(160, 440, 100, 21);
        painelAddAlimento.add(jLabel25, javax.swing.JLayeredPane.DEFAULT_LAYER);

        campoCarboGAdd.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        campoCarboGAdd.setBounds(260, 360, 70, 30);
        painelAddAlimento.add(campoCarboGAdd, javax.swing.JLayeredPane.DEFAULT_LAYER);

        campoProteinaGAdd.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        campoProteinaGAdd.setBounds(260, 400, 70, 30);
        painelAddAlimento.add(campoProteinaGAdd, javax.swing.JLayeredPane.DEFAULT_LAYER);

        campoGorduraGAdd.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        campoGorduraGAdd.setBounds(260, 440, 70, 30);
        painelAddAlimento.add(campoGorduraGAdd, javax.swing.JLayeredPane.DEFAULT_LAYER);

        buttonLimparAdd.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        buttonLimparAdd.setText("Limpar");
        buttonLimparAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonLimparAddMouseClicked(evt);
            }
        });
        buttonLimparAdd.setBounds(50, 490, 110, 30);
        painelAddAlimento.add(buttonLimparAdd, javax.swing.JLayeredPane.DEFAULT_LAYER);

        buttonSalvarAdd.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        buttonSalvarAdd.setText("Salvar");
        buttonSalvarAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonSalvarAddMouseClicked(evt);
            }
        });
        buttonSalvarAdd.setBounds(240, 490, 110, 30);
        painelAddAlimento.add(buttonSalvarAdd, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel27.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jLabel27.setText("g");
        jLabel27.setBounds(330, 360, 20, 30);
        painelAddAlimento.add(jLabel27, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel28.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jLabel28.setText("g");
        jLabel28.setBounds(330, 400, 20, 30);
        painelAddAlimento.add(jLabel28, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel29.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jLabel29.setText("g");
        jLabel29.setBounds(330, 440, 20, 30);
        painelAddAlimento.add(jLabel29, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel32.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jLabel32.setText("Kcal");
        jLabel32.setBounds(330, 320, 30, 30);
        painelAddAlimento.add(jLabel32, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel30.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel30.setText("Data:");
        jLabel30.setBounds(210, 90, 50, 30);
        painelAddAlimento.add(jLabel30, javax.swing.JLayeredPane.DEFAULT_LAYER);

        try {
            campoDia.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        campoDia.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        campoDia.setBounds(260, 90, 90, 30);
        painelAddAlimento.add(campoDia, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel31.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel31.setText("Qntd:");
        jLabel31.setBounds(40, 320, 50, 20);
        painelAddAlimento.add(jLabel31, javax.swing.JLayeredPane.DEFAULT_LAYER);

        campoQntd.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        campoQntd.setBounds(30, 350, 70, 30);
        painelAddAlimento.add(campoQntd, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel62.setFont(new java.awt.Font("Perpetua Titling MT", 3, 18)); // NOI18N
        jLabel62.setText("Adicionar Alimento");
        jLabel62.setBounds(80, 20, 230, 20);
        painelAddAlimento.add(jLabel62, javax.swing.JLayeredPane.DEFAULT_LAYER);

        buttonListaAimentos.setFont(new java.awt.Font("Trebuchet MS", 3, 14)); // NOI18N
        buttonListaAimentos.setText("Consultar Lista de Alimentos");
        buttonListaAimentos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonListaAimentosMouseClicked(evt);
            }
        });
        buttonListaAimentos.setBounds(40, 270, 320, 30);
        painelAddAlimento.add(buttonListaAimentos, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel66.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel66.setText("Porção:");
        jLabel66.setBounds(20, 180, 80, 20);
        painelAddAlimento.add(jLabel66, javax.swing.JLayeredPane.DEFAULT_LAYER);

        campoPorcao.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        campoPorcao.setBounds(20, 210, 130, 30);
        painelAddAlimento.add(campoPorcao, javax.swing.JLayeredPane.DEFAULT_LAYER);

        painelAddAlimento.setBounds(340, 100, 390, 540);
        painelInicial.add(painelAddAlimento, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0)));
        jSeparator1.setBounds(758, 10, 2, 630);
        painelInicial.add(jSeparator1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel33.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        jLabel33.setText("MEU DIA DE HOJE!!!");
        jLabel33.setBounds(870, 20, 170, 30);
        painelInicial.add(jLabel33, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel34.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(255, 0, 0));
        jLabel34.setText("Kcal consumida:");
        jLabel34.setBounds(780, 120, 130, 30);
        painelInicial.add(jLabel34, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel35.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel35.setText("Proteína consumida:");
        jLabel35.setBounds(780, 340, 170, 20);
        painelInicial.add(jLabel35, javax.swing.JLayeredPane.DEFAULT_LAYER);

        painelAddExercicio.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel26.setFont(new java.awt.Font("Perpetua Titling MT", 3, 18)); // NOI18N
        jLabel26.setText("Adicionar Exercício");
        jLabel26.setBounds(80, 20, 230, 30);
        painelAddExercicio.add(jLabel26, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel40.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel40.setText("Período:");
        jLabel40.setBounds(20, 160, 69, 21);
        painelAddExercicio.add(jLabel40, javax.swing.JLayeredPane.DEFAULT_LAYER);

        buttonGroupPeriodoExercicio.add(radioManhaExercicio);
        radioManhaExercicio.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        radioManhaExercicio.setText("Manha");
        radioManhaExercicio.setBounds(100, 130, 70, 27);
        painelAddExercicio.add(radioManhaExercicio, javax.swing.JLayeredPane.DEFAULT_LAYER);

        buttonGroupPeriodoExercicio.add(radioTardeExercicio);
        radioTardeExercicio.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        radioTardeExercicio.setText("Tarde");
        radioTardeExercicio.setBounds(100, 160, 70, 27);
        painelAddExercicio.add(radioTardeExercicio, javax.swing.JLayeredPane.DEFAULT_LAYER);

        buttonGroupPeriodoExercicio.add(radioNoiteExercicio);
        radioNoiteExercicio.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        radioNoiteExercicio.setText("Noite");
        radioNoiteExercicio.setBounds(100, 190, 70, 27);
        painelAddExercicio.add(radioNoiteExercicio, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel41.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel41.setText("Horário:");
        jLabel41.setBounds(200, 160, 67, 30);
        painelAddExercicio.add(jLabel41, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel42.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel42.setText("Quantidade (horas):");
        jLabel42.setBounds(20, 380, 170, 30);
        painelAddExercicio.add(jLabel42, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel43.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel43.setText("Descrição do Exercício:");
        jLabel43.setBounds(20, 250, 190, 20);
        painelAddExercicio.add(jLabel43, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel44.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel44.setText("Kcal Gasta:");
        jLabel44.setBounds(90, 430, 90, 30);
        painelAddExercicio.add(jLabel44, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel61.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel61.setText("Data:");
        jLabel61.setBounds(30, 80, 50, 30);
        painelAddExercicio.add(jLabel61, javax.swing.JLayeredPane.DEFAULT_LAYER);

        try {
            campoDataExercicio.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        campoDataExercicio.setBounds(80, 80, 90, 30);
        painelAddExercicio.add(campoDataExercicio, javax.swing.JLayeredPane.DEFAULT_LAYER);

        try {
            campoHorarioExercicio.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        campoHorarioExercicio.setBounds(270, 160, 60, 30);
        painelAddExercicio.add(campoHorarioExercicio, javax.swing.JLayeredPane.DEFAULT_LAYER);

        campoExercicio.setColumns(20);
        campoExercicio.setRows(5);
        jScrollPane4.setViewportView(campoExercicio);

        jScrollPane4.setBounds(30, 280, 340, 70);
        painelAddExercicio.add(jScrollPane4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        campoQntdExercicio.setBounds(190, 380, 130, 30);
        painelAddExercicio.add(campoQntdExercicio, javax.swing.JLayeredPane.DEFAULT_LAYER);
        campoKcalExercicio.setBounds(190, 430, 90, 30);
        painelAddExercicio.add(campoKcalExercicio, javax.swing.JLayeredPane.DEFAULT_LAYER);

        buttonLimparExercicio.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        buttonLimparExercicio.setText("Limpar");
        buttonLimparExercicio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonLimparExercicioMouseClicked(evt);
            }
        });
        buttonLimparExercicio.setBounds(50, 490, 110, 29);
        painelAddExercicio.add(buttonLimparExercicio, javax.swing.JLayeredPane.DEFAULT_LAYER);

        buttonSalvarExercicio.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        buttonSalvarExercicio.setText("Salvar");
        buttonSalvarExercicio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonSalvarExercicioMouseClicked(evt);
            }
        });
        buttonSalvarExercicio.setBounds(240, 490, 110, 29);
        painelAddExercicio.add(buttonSalvarExercicio, javax.swing.JLayeredPane.DEFAULT_LAYER);

        painelAddExercicio.setBounds(340, 100, 390, 540);
        painelInicial.add(painelAddExercicio, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel36.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel36.setText("Carboidrato consumido:");
        jLabel36.setBounds(780, 260, 200, 21);
        painelInicial.add(jLabel36, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel37.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel37.setText("Gordura consumida:");
        jLabel37.setBounds(780, 420, 180, 21);
        painelInicial.add(jLabel37, javax.swing.JLayeredPane.DEFAULT_LAYER);

        buttonDiario.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        buttonDiario.setText("Diário");
        buttonDiario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonDiarioMouseClicked(evt);
            }
        });
        buttonDiario.setBounds(630, 20, 100, 60);
        painelInicial.add(buttonDiario, javax.swing.JLayeredPane.DEFAULT_LAYER);

        campoDatadeHoje.setEditable(false);
        campoDatadeHoje.setBackground(new java.awt.Color(153, 204, 255));
        campoDatadeHoje.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        campoDatadeHoje.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("EEEE, dd/MM/yyyy"))));
        campoDatadeHoje.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        campoDatadeHoje.setBounds(890, 50, 120, 30);
        painelInicial.add(campoDatadeHoje, javax.swing.JLayeredPane.DEFAULT_LAYER);

        buttonAvanco.setText(">");
        buttonAvanco.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonAvancoMouseClicked(evt);
            }
        });
        buttonAvanco.setBounds(1050, 30, 50, 30);
        painelInicial.add(buttonAvanco, javax.swing.JLayeredPane.DEFAULT_LAYER);

        buttonAnterior.setText("<");
        buttonAnterior.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonAnteriorMouseClicked(evt);
            }
        });
        buttonAnterior.setBounds(800, 30, 50, 30);
        painelInicial.add(buttonAnterior, javax.swing.JLayeredPane.DEFAULT_LAYER);

        campoKcalConsumida.setEditable(false);
        campoKcalConsumida.setFont(new java.awt.Font("Trebuchet MS", 0, 16)); // NOI18N
        campoKcalConsumida.setBounds(910, 120, 70, 30);
        painelInicial.add(campoKcalConsumida, javax.swing.JLayeredPane.DEFAULT_LAYER);

        campoProteinaGConsumida.setEditable(false);
        campoProteinaGConsumida.setFont(new java.awt.Font("Trebuchet MS", 0, 16)); // NOI18N
        campoProteinaGConsumida.setBounds(780, 370, 70, 30);
        painelInicial.add(campoProteinaGConsumida, javax.swing.JLayeredPane.DEFAULT_LAYER);

        campoProteinaKConsumida.setEditable(false);
        campoProteinaKConsumida.setFont(new java.awt.Font("Trebuchet MS", 0, 16)); // NOI18N
        campoProteinaKConsumida.setBounds(890, 370, 70, 30);
        painelInicial.add(campoProteinaKConsumida, javax.swing.JLayeredPane.DEFAULT_LAYER);

        campoCarboGConsumida.setEditable(false);
        campoCarboGConsumida.setFont(new java.awt.Font("Trebuchet MS", 0, 16)); // NOI18N
        campoCarboGConsumida.setBounds(780, 290, 70, 30);
        painelInicial.add(campoCarboGConsumida, javax.swing.JLayeredPane.DEFAULT_LAYER);

        campoCarboKConsumida.setEditable(false);
        campoCarboKConsumida.setFont(new java.awt.Font("Trebuchet MS", 0, 16)); // NOI18N
        campoCarboKConsumida.setBounds(890, 290, 70, 30);
        painelInicial.add(campoCarboKConsumida, javax.swing.JLayeredPane.DEFAULT_LAYER);

        campoGorduraGConsumida.setEditable(false);
        campoGorduraGConsumida.setFont(new java.awt.Font("Trebuchet MS", 0, 16)); // NOI18N
        campoGorduraGConsumida.setBounds(780, 450, 70, 30);
        painelInicial.add(campoGorduraGConsumida, javax.swing.JLayeredPane.DEFAULT_LAYER);

        campoGorduraKConsumida.setEditable(false);
        campoGorduraKConsumida.setFont(new java.awt.Font("Trebuchet MS", 0, 16)); // NOI18N
        campoGorduraKConsumida.setBounds(890, 450, 70, 30);
        painelInicial.add(campoGorduraKConsumida, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel45.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel45.setForeground(new java.awt.Color(0, 102, 204));
        jLabel45.setText("Kcal Gasta:");
        jLabel45.setBounds(820, 160, 90, 30);
        painelInicial.add(jLabel45, javax.swing.JLayeredPane.DEFAULT_LAYER);

        campoKcalGasta.setEditable(false);
        campoKcalGasta.setFont(new java.awt.Font("Trebuchet MS", 0, 16)); // NOI18N
        campoKcalGasta.setBounds(910, 160, 70, 30);
        painelInicial.add(campoKcalGasta, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel46.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel46.setText("Total atual:");
        jLabel46.setBounds(810, 200, 100, 30);
        painelInicial.add(jLabel46, javax.swing.JLayeredPane.DEFAULT_LAYER);

        campoKcalTotal.setEditable(false);
        campoKcalTotal.setFont(new java.awt.Font("Trebuchet MS", 0, 16)); // NOI18N
        campoKcalTotal.setBounds(910, 200, 70, 30);
        painelInicial.add(campoKcalTotal, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel47.setText("Kcal");
        jLabel47.setBounds(1100, 200, 30, 30);
        painelInicial.add(jLabel47, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel48.setText("Kcal");
        jLabel48.setBounds(970, 450, 30, 30);
        painelInicial.add(jLabel48, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel49.setText("Kcal");
        jLabel49.setBounds(980, 160, 30, 30);
        painelInicial.add(jLabel49, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jSeparator8.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator8.setBounds(1010, 110, 10, 380);
        painelInicial.add(jSeparator8, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel50.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel50.setText("RESTANTE:");
        jLabel50.setBounds(1030, 90, 100, 30);
        painelInicial.add(jLabel50, javax.swing.JLayeredPane.DEFAULT_LAYER);

        campoKcalRestante.setEditable(false);
        campoKcalRestante.setBackground(new java.awt.Color(0, 0, 0));
        campoKcalRestante.setFont(new java.awt.Font("Trebuchet MS", 0, 16)); // NOI18N
        campoKcalRestante.setForeground(new java.awt.Color(255, 255, 255));
        campoKcalRestante.setBounds(1020, 200, 80, 30);
        painelInicial.add(campoKcalRestante, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel51.setText("Kcal");
        jLabel51.setBounds(980, 120, 30, 30);
        painelInicial.add(jLabel51, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel52.setText("Kcal");
        jLabel52.setBounds(970, 370, 30, 30);
        painelInicial.add(jLabel52, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel53.setText("Kcal");
        jLabel53.setBounds(970, 290, 30, 30);
        painelInicial.add(jLabel53, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel54.setText("g");
        jLabel54.setBounds(1100, 450, 20, 30);
        painelInicial.add(jLabel54, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel55.setText("g");
        jLabel55.setBounds(860, 450, 20, 30);
        painelInicial.add(jLabel55, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel56.setText("g");
        jLabel56.setBounds(860, 290, 20, 30);
        painelInicial.add(jLabel56, javax.swing.JLayeredPane.DEFAULT_LAYER);

        campoCarboRestante.setEditable(false);
        campoCarboRestante.setBackground(new java.awt.Color(0, 0, 0));
        campoCarboRestante.setFont(new java.awt.Font("Trebuchet MS", 0, 16)); // NOI18N
        campoCarboRestante.setForeground(new java.awt.Color(255, 255, 255));
        campoCarboRestante.setBounds(1020, 290, 80, 30);
        painelInicial.add(campoCarboRestante, javax.swing.JLayeredPane.DEFAULT_LAYER);

        campoProteinaRestante.setEditable(false);
        campoProteinaRestante.setBackground(new java.awt.Color(0, 0, 0));
        campoProteinaRestante.setFont(new java.awt.Font("Trebuchet MS", 0, 16)); // NOI18N
        campoProteinaRestante.setForeground(new java.awt.Color(255, 255, 255));
        campoProteinaRestante.setBounds(1020, 370, 80, 30);
        painelInicial.add(campoProteinaRestante, javax.swing.JLayeredPane.DEFAULT_LAYER);

        campoGorduraRestante.setEditable(false);
        campoGorduraRestante.setBackground(new java.awt.Color(0, 0, 0));
        campoGorduraRestante.setFont(new java.awt.Font("Trebuchet MS", 0, 16)); // NOI18N
        campoGorduraRestante.setForeground(new java.awt.Color(255, 255, 255));
        campoGorduraRestante.setBounds(1020, 450, 80, 30);
        painelInicial.add(campoGorduraRestante, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel57.setText("g");
        jLabel57.setBounds(860, 370, 20, 30);
        painelInicial.add(jLabel57, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel58.setText("g");
        jLabel58.setBounds(1100, 290, 20, 30);
        painelInicial.add(jLabel58, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel59.setText("g");
        jLabel59.setBounds(1100, 370, 20, 30);
        painelInicial.add(jLabel59, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel60.setText("Kcal");
        jLabel60.setBounds(980, 200, 30, 30);
        painelInicial.add(jLabel60, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jSeparator9.setBounds(780, 500, 330, 10);
        painelInicial.add(jSeparator9, javax.swing.JLayeredPane.DEFAULT_LAYER);

        areaAviso.setColumns(20);
        areaAviso.setFont(new java.awt.Font("Trebuchet MS", 0, 16)); // NOI18N
        areaAviso.setRows(5);
        jScrollPane2.setViewportView(areaAviso);

        jScrollPane2.setBounds(780, 510, 330, 130);
        painelInicial.add(jScrollPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel63.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel63.setText("Kcal");
        jLabel63.setBounds(260, 560, 40, 30);
        painelInicial.add(jLabel63, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel64.setFont(new java.awt.Font("Trebuchet MS", 0, 16)); // NOI18N
        jLabel64.setText("Tendência:");
        jLabel64.setBounds(10, 250, 80, 30);
        painelInicial.add(jLabel64, javax.swing.JLayeredPane.DEFAULT_LAYER);

        campoNivelPerfil.setEditable(false);
        campoNivelPerfil.setFont(new java.awt.Font("Trebuchet MS", 2, 16)); // NOI18N
        campoNivelPerfil.setBounds(130, 310, 160, 30);
        painelInicial.add(campoNivelPerfil, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel65.setFont(new java.awt.Font("Trebuchet MS", 0, 16)); // NOI18N
        jLabel65.setText("Nível Atividade:");
        jLabel65.setBounds(10, 310, 120, 30);
        painelInicial.add(jLabel65, javax.swing.JLayeredPane.DEFAULT_LAYER);

        campoMetodoPerfil.setEditable(false);
        campoMetodoPerfil.setFont(new java.awt.Font("Trebuchet MS", 2, 16)); // NOI18N
        campoMetodoPerfil.setBounds(150, 370, 140, 30);
        painelInicial.add(campoMetodoPerfil, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jSeparator3.setBounds(10, 420, 280, 10);
        painelInicial.add(jSeparator3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        menuAdicionarCadastro.setText("Iniciar");

        menuEntrar.setText("Entrar");
        menuEntrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuEntrarMouseClicked(evt);
            }
        });
        menuAdicionarCadastro.add(menuEntrar);

        menuAdicionar.setText("Adicionar Cadastro");
        menuAdicionar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuAdicionarMouseClicked(evt);
            }
        });
        menuAdicionarCadastro.add(menuAdicionar);

        jMenuBar1.add(menuAdicionarCadastro);

        menuAjuda.setText("Ajuda");

        menuManual.setText("Manual");
        menuManual.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuManualMouseClicked(evt);
            }
        });
        menuAjuda.add(menuManual);

        jMenuBar1.add(menuAjuda);

        jMenu3.setText("Sair");

        menuLogout.setText("Logout");
        menuLogout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuLogoutMouseClicked(evt);
            }
        });
        jMenu3.add(menuLogout);

        menuSair.setText("Sair");
        menuSair.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuSairMouseClicked(evt);
            }
        });
        jMenu3.add(menuSair);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(painelFigura, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(painelInicial, javax.swing.GroupLayout.DEFAULT_SIZE, 1133, Short.MAX_VALUE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 10, Short.MAX_VALUE)
                    .addComponent(painelDiario, javax.swing.GroupLayout.DEFAULT_SIZE, 1133, Short.MAX_VALUE)
                    .addGap(0, 10, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 11, Short.MAX_VALUE)
                    .addComponent(painelListaAlimentos, javax.swing.GroupLayout.PREFERRED_SIZE, 1130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 12, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(11, 11, 11)
                    .addComponent(painelAjuda, javax.swing.GroupLayout.DEFAULT_SIZE, 1131, Short.MAX_VALUE)
                    .addGap(11, 11, 11)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(painelFigura, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(painelInicial, javax.swing.GroupLayout.DEFAULT_SIZE, 651, Short.MAX_VALUE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 11, Short.MAX_VALUE)
                    .addComponent(painelDiario, javax.swing.GroupLayout.DEFAULT_SIZE, 651, Short.MAX_VALUE)
                    .addGap(0, 11, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 11, Short.MAX_VALUE)
                    .addComponent(painelListaAlimentos, javax.swing.GroupLayout.PREFERRED_SIZE, 650, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 12, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(painelAjuda, javax.swing.GroupLayout.DEFAULT_SIZE, 651, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void menuAdicionarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuAdicionarMouseClicked
        // TODO add your handling code here:
        // Abre janela para adicionar um novo cadastro no bd
        new Cadastro().setVisible(true);
    }//GEN-LAST:event_menuAdicionarMouseClicked

    private void menuEntrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuEntrarMouseClicked
        // TODO add your handling code here:
        // Abre janela de login para um usuario ja cadastrado entrar no programa com seus dados
        new Login().setVisible(true);        
    }//GEN-LAST:event_menuEntrarMouseClicked

    private void buttonSalvarAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonSalvarAddMouseClicked
        // +Alimento é salvo no BD na tabela Alimento
        Double a_Qntd = null;
        Double a_Kcal = null;
        Double a_ProteinaG = null;
        Double a_CarboG = null;
        Double a_GorduraG = null;
        
        String a_Periodo = "";
        if (radioManha.isSelected() == true)
            a_Periodo = "Manha";
        if (radioTarde.isSelected() == true)
            a_Periodo = "Tarde";
        if (radioNoite.isSelected() == true)
            a_Periodo = "Noite";
                 
        String a_Dia = campoDia.getText();
        String a_Hora = campoHora.getText();
        String Quantidade = campoQntd.getText();
        String a_Alimento = campoAlimento.getText();
        String Kcal = campoKcal.getText();     
        String Carbo = campoCarboGAdd.getText();
        String Proteina = campoProteinaGAdd.getText();
        String Gordura = campoGorduraGAdd.getText();
        String a_Porcao = campoPorcao.getText();
          
        if("".equals(a_Periodo) || "  /  /    ".equals(a_Dia) || "  :  ".equals(a_Hora) || "".equals(Quantidade) || "".equals(a_Alimento) || "".equals(a_Porcao) || "".equals(Kcal) || "".equals(Carbo) | "".equals(Proteina) || "".equals(Gordura))
            MensagemNull();     
        else{
            
            a_Qntd = Double.parseDouble(Quantidade);
            a_Kcal = Double.parseDouble(Kcal);
            a_CarboG = Double.parseDouble(Carbo);
            a_ProteinaG = Double.parseDouble(Proteina);
            a_GorduraG = Double.parseDouble(Gordura);
            
            // multiplicando os valores pela quantidade
            a_Kcal = a_Qntd * a_Kcal;
            a_ProteinaG = a_Qntd * a_ProteinaG;
            a_CarboG = a_Qntd * a_CarboG;
            a_GorduraG = a_Qntd * a_GorduraG;
            
            // MONTANDO A LINHA DE INSERÇÃO NO BANCO:
            String s = "INSERT into Alimento values "
                    + "('"+a_Dia+"','"+a_Periodo+"','"+a_Hora+"','"+a_Alimento+"',"+a_Kcal+","+a_ProteinaG+","+a_CarboG+","+a_GorduraG+",'"+p_Nome+"','"+a_Qntd+"');";
            System.out.println(s);
            try {
                insert(s);
            } catch (SQLException ex) {
                Logger.getLogger(Inicial.class.getName()).log(Level.SEVERE, null, ex);
            }

            // chama método MeuDia para atualizar aba Meu Dia caso o alimento inserido tenha sido do dia de hoje!!
            MeuDia(campoDia.getText());

            // Limpando o registro da aba +Alimento para deixar pronto para add mais um alimento.
            radioManha.setSelected(false);
            radioTarde.setSelected(false);
            radioNoite.setSelected(false);
            campoHora.setText("");
            campoQntd.setText("");
            campoAlimento.setText("");
            campoKcal.setText("");
            campoCarboGAdd.setText("");
            campoProteinaGAdd.setText("");
            campoGorduraGAdd.setText("");
            campoQntd.setText("");
            campoPorcao.setText("");
        }
    }//GEN-LAST:event_buttonSalvarAddMouseClicked

    private void buttonLimparAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonLimparAddMouseClicked
        // Limpa todos os registros na aba +Alimento
        radioManha.setSelected(false);
        radioTarde.setSelected(false);
        radioNoite.setSelected(false);
        campoDia.setText("");
        campoHora.setText("");
        campoQntd.setText("");
        campoAlimento.setText("");
        campoKcal.setText("");
        campoCarboGAdd.setText("");
        campoProteinaGAdd.setText("");
        campoGorduraGAdd.setText("");
        campoQntd.setText("");
        campoPorcao.setText("");
        
    }//GEN-LAST:event_buttonLimparAddMouseClicked

    private void buttonMaisAlimentoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonMaisAlimentoMouseClicked
        // Torna o painel +Alimento visível
        painelAddAlimento.setVisible(true);
        // lembrar de colocar os outros pra false aqui qndo eles existirem
        painelAddExercicio.setVisible(false);
        painelAjuda.setVisible(false);
        campoDia.setText(""+DiaDeHoje());
    }//GEN-LAST:event_buttonMaisAlimentoMouseClicked

    private void buttonMaisExercicioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonMaisExercicioMouseClicked
        // TODO add your handling code here:
        painelAddAlimento.setVisible(false);
        painelAddExercicio.setVisible(true);
        painelAjuda.setVisible(false);
        campoDataExercicio.setText(""+DiaDeHoje());
    }//GEN-LAST:event_buttonMaisExercicioMouseClicked

    private void buttonDiarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonDiarioMouseClicked
        // TODO add your handling code here:
        painelInicial.setVisible(false);
        painelDiario.setVisible(true);
        painelAjuda.setVisible(false);
        
        // função MeuDiario();
        campoUsuarioDiario.setText(""+p_Nome);
        MeuDiaDiario(DiaDeHoje());
        
    }//GEN-LAST:event_buttonDiarioMouseClicked

    private void buttonVoltarDiarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonVoltarDiarioMouseClicked
        painelDiario.setVisible(false);
        painelAjuda.setVisible(false);
        painelInicial.setVisible(true);
    }//GEN-LAST:event_buttonVoltarDiarioMouseClicked

    private void buttonAvancoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonAvancoMouseClicked
        try {
            //Chama o método MeuDia com a data de amanha como parametro.
            MeuDia(DiaDeAmanha());
        } catch (ParseException ex) {
            Logger.getLogger(Inicial.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonAvancoMouseClicked

    private void buttonAnteriorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonAnteriorMouseClicked
        try {
            //Chama o método MeuDia com a data de ontem como parametro.
            MeuDia(DiaDeOntem());
        } catch (ParseException ex) {
            Logger.getLogger(Inicial.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonAnteriorMouseClicked

    private void menuLogoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuLogoutMouseClicked
        painelInicial.setVisible(false);
        painelFigura.setVisible(true);
        painelAjuda.setVisible(false);
    }//GEN-LAST:event_menuLogoutMouseClicked

    private void menuSairMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuSairMouseClicked
        System.exit(0);
    }//GEN-LAST:event_menuSairMouseClicked

    private void buttonSalvarExercicioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonSalvarExercicioMouseClicked
         // +Exercicio é salvo no BD na tabela Exercicio
        
        String a_PeriodoEx = "";
        if (radioManhaExercicio.isSelected() == true)
            a_PeriodoEx = "Manha";
        if (radioTardeExercicio.isSelected() == true)
            a_PeriodoEx = "Tarde";
        if (radioNoiteExercicio.isSelected() == true)
            a_PeriodoEx = "Noite";
       
        String a_DiaEx = campoDataExercicio.getText();
        String a_HoraEx = campoHorarioExercicio.getText();
        String a_QntdEx = campoQntdExercicio.getText();
        String a_ExercicioEx = campoExercicio.getText();
        String a_KcalEx = campoKcalExercicio.getText();
       
        // verificando valores nulos:
        if(a_PeriodoEx == "" || a_DiaEx == "" || a_HoraEx == "" || a_QntdEx == "" || a_ExercicioEx == "" || a_KcalEx == "")
            MensagemNull();        
        else{               
            // MONTANDO A LINHA DE INSERÇÃO NO BANCO:
            String s = "INSERT into Exercicio values "
                    + "('"+a_DiaEx+"',"+a_QntdEx+",'"+a_ExercicioEx+"',"+a_KcalEx+",'"+p_Nome+"','"+a_PeriodoEx+"','"+a_HoraEx+"');";
            System.out.println(s);
            try {
                insert(s);
            } catch (SQLException ex) {
                Logger.getLogger(Inicial.class.getName()).log(Level.SEVERE, null, ex);
            }

            // chama método MeuDia para atualizar aba Meu Dia caso o alimento inserido tenha sido do dia de hoje!!
            MeuDia(campoDataExercicio.getText());

            // Limpando o registro da aba +Exercicio para deixar pronto para add mais um exercicio.
            radioManhaExercicio.setSelected(false);
            radioTardeExercicio.setSelected(false);
            radioNoiteExercicio.setSelected(false);
            campoDataExercicio.setText("");
            campoHorarioExercicio.setText("");
            campoQntdExercicio.setText("");
            campoExercicio.setText("");
            campoKcalExercicio.setText("");
        }
    }//GEN-LAST:event_buttonSalvarExercicioMouseClicked

    private void buttonLimparExercicioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonLimparExercicioMouseClicked
        // TODO add your handling code here:
        // Limpando o registro da aba +Exercicio para deixar pronto para add mais um exercicio.
        radioManhaExercicio.setSelected(false);
        radioTardeExercicio.setSelected(false);
        radioNoiteExercicio.setSelected(false);
        campoDataExercicio.setText("");
        campoHorarioExercicio.setText("");
        campoQntdExercicio.setText("");
        campoExercicio.setText("");
        campoKcalExercicio.setText("");
    }//GEN-LAST:event_buttonLimparExercicioMouseClicked

    private void buttonListaAimentosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonListaAimentosMouseClicked
        // TODO add your handling code here:
        painelInicial.setVisible(false);
        painelFigura.setVisible(false);
        painelDiario.setVisible(false);
        painelAjuda.setVisible(false);
        painelListaAlimentos.setVisible(true);
        Listar();
    }//GEN-LAST:event_buttonListaAimentosMouseClicked

    private void buttonVoltarListaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonVoltarListaMouseClicked
        // TODO add your handling code here:
        model.setNumRows(0);
        painelInicial.setVisible(true);
        painelListaAlimentos.setVisible(false);
        painelAjuda.setVisible(false);
    }//GEN-LAST:event_buttonVoltarListaMouseClicked

    private void buttonInserirNovoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonInserirNovoMouseClicked
        // TODO add your handling code here:
        new InserirAlimentoBD().setVisible(true);
    }//GEN-LAST:event_buttonInserirNovoMouseClicked

    private void buttonEscolherMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonEscolherMouseClicked
        // copiar da linha selecionada da tabela para o painelAddAlimento
        int linhaSelecionada = jTable1.getSelectedRow();//pega a linha selecionada 

        String ColunaPorcao = jTable1.getModel().getValueAt(linhaSelecionada, 0).toString(); // Primeira coluna da linha 
        System.out.println(ColunaPorcao);
        campoPorcao.setText(ColunaPorcao);
        
        String ColunaAlimento = jTable1.getModel().getValueAt(linhaSelecionada, 1).toString(); // Primeira coluna da linha 
        System.out.println(ColunaAlimento);
        campoAlimento.setText(ColunaAlimento);
        
        String ColunaKcal = jTable1.getModel().getValueAt(linhaSelecionada, 3).toString(); // Primeira coluna da linha 
        System.out.println(ColunaKcal);
        campoKcal.setText(ColunaKcal);
        
        String ColunaCarbo = jTable1.getModel().getValueAt(linhaSelecionada, 4).toString(); // Primeira coluna da linha 
        System.out.println(ColunaCarbo);
        campoCarboGAdd.setText(ColunaCarbo);
        
        String ColunaProteina = jTable1.getModel().getValueAt(linhaSelecionada, 5).toString(); // Primeira coluna da linha 
        System.out.println(ColunaProteina);
        campoProteinaGAdd.setText(ColunaProteina);
        
        String ColunaGordura = jTable1.getModel().getValueAt(linhaSelecionada, 6).toString(); // Primeira coluna da linha 
        System.out.println(ColunaGordura);
        campoGorduraGAdd.setText(ColunaGordura);
        
        painelListaAlimentos.setVisible(false);
        painelDiario.setVisible(false);
        painelInicial.setVisible(true);
        painelAjuda.setVisible(false);
     
    }//GEN-LAST:event_buttonEscolherMouseClicked

    private void bottonAnteriorDiarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bottonAnteriorDiarioMouseClicked
        try {
            // TODO add your handling code here:
            MeuDiaDiario(DiaDeOntemDiario());
        } catch (ParseException ex) {
            Logger.getLogger(Inicial.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bottonAnteriorDiarioMouseClicked

    private void buttonAvancarDiarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonAvancarDiarioMouseClicked
        try {
            // TODO add your handling code here:
            MeuDiaDiario(DiaDeAmanhaDiario());
        } catch (ParseException ex) {
            Logger.getLogger(Inicial.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonAvancarDiarioMouseClicked

    private void menuManualMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuManualMouseClicked
// TODO add your handling code here:
        // TODO add your handling code here:
        painelFigura.setVisible(false);
        painelInicial.setVisible(false);
        painelDiario.setVisible(false);
        painelListaAlimentos.setVisible(false);
        painelAjuda.setVisible(true);
    }//GEN-LAST:event_menuManualMouseClicked

    private void AtualizarTabela(){ 
        model.setNumRows(0);
        Listar();
    }
    
    public void Listar(){
        model = (DefaultTableModel) jTable1.getModel();
        model.setNumRows(0);
       
        String s = "SELECT * FROM Comida order by Nome;";
        try{
                    try (Connection conn = DriverManager.getConnection("jdbc:postgresql://127.0.0.1:5432/Contador_Caloria", "postgres", "212889"))
                    {
                        System.out.println("Acessou o banco de dados com sucesso - Função LISTAR!");
                        
                        conn.setAutoCommit(false);
                        Statement st = conn.createStatement();
                        ResultSet rs = st.executeQuery(s);
                        
                        while (rs.next())
                        { 
                                String c_Nome = rs.getString("Nome");
                                String c_Marca = rs.getString("Marca");
                                String c_Descricao = rs.getString("Descrição");
                                
                                String c_Kcal = rs.getString("Kcal");
                                Double c_Kcal1 = Double.parseDouble(c_Kcal);
                                double p = Math.pow(10, 2), v = c_Kcal1*p;
                                v = Math.round(v);
                                v = v/p;
                                
                                String c_Carboidrato = rs.getString("Carboidrato");
                                Double c_Carboidrato1 = Double.parseDouble(c_Carboidrato);
                                double p1 = Math.pow(10, 2), v1 = c_Carboidrato1*p1;
                                v1 = Math.round(v1);
                                v1 = v1/p1;
          
                                String c_Proteina = rs.getString("Proteina");
                                Double c_Proteina1 = Double.parseDouble(c_Proteina);
                                double p2 = Math.pow(10, 2), v2 = c_Proteina1*p2;
                                v2 = Math.round(v2);
                                v2 = v2/p2;
                                
                                String c_Gordura = rs.getString("Gordura"); 
                                Double c_Gordura1 = Double.parseDouble(c_Gordura);
                                double p3 = Math.pow(10, 2), v3 = c_Gordura1*p3;
                                v3 = Math.round(v3);
                                v3 = v3/p3;
                            
                                String c_Porcao = rs.getString("Porcao");
                                
                                // Lista na tabela na tabela
                                model = (DefaultTableModel) jTable1.getModel();                                 
                                model.addRow(new Object[]{""+c_Porcao, ""+c_Nome, ""+c_Marca, ""+v, ""+v1, ""+v2, ""+v3}); 
                        } 
                        rs.close();
                        st.close(); 
                        conn.commit();
                    }
        }
        catch(SQLException e){
            System.out.println("Busca na tabela Comida Falhou!!");}
    }
       
    private String DiaDeHoje(){
        // cálculo do dia de hoje, retorna uma string.
        Date MeuDia = new Date(System.currentTimeMillis());
        SimpleDateFormat ft = new SimpleDateFormat ("dd/MM/yyyy");
        return ft.format(MeuDia);
    }
    
    private String DiaDeAmanha() throws ParseException{
        // limpa tudo que esta na aba Meu Dia!!
        campoKcalConsumida.setText("");
        campoKcalGasta.setText("");
        campoKcalTotal.setText("");
        campoKcalRestante.setText("");
        campoProteinaGConsumida.setText("");
        campoProteinaKConsumida.setText("");
        campoProteinaRestante.setText("");
        campoCarboGConsumida.setText("");
        campoCarboKConsumida.setText("");
        campoCarboRestante.setText("");
        campoGorduraGConsumida.setText("");
        campoGorduraKConsumida.setText("");
        campoGorduraRestante.setText("");
      
        // pegando a data atual do campo mostrado na tela
        String CampoDia = campoDatadeHoje.getText();
        
        // transformando a String CampoDia em variavel de data MeuDia.
        java.sql.Date MeuDia = null;  
        try {  
            DateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");  
            MeuDia = new java.sql.Date( ((java.util.Date)formatter.parse(CampoDia)).getTime() );
            
            // Somar um dia a variavel Data MeuDia e retorna MeuDia.
            MeuDia.setDate(MeuDia.getDate() + 1); 
            SimpleDateFormat ft = new SimpleDateFormat ("dd/MM/yyyy");
           // System.out.println("Cal:" +MeuDia);
            return ft.format(MeuDia);
            
        } catch (ParseException e) {              
            throw e;}   
    }
    
    private String DiaDeAmanhaDiario() throws ParseException{
        // limpa tudo que esta na aba Meu Dia!!
        campoKcalConsumida.setText("");
        campoKcalGasta.setText("");
        campoKcalTotal.setText("");
        campoKcalRestante.setText("");
        campoProteinaGConsumida.setText("");
        campoProteinaKConsumida.setText("");
        campoProteinaRestante.setText("");
        campoCarboGConsumida.setText("");
        campoCarboKConsumida.setText("");
        campoCarboRestante.setText("");
        campoGorduraGConsumida.setText("");
        campoGorduraKConsumida.setText("");
        campoGorduraRestante.setText("");
      
        // pegando a data atual do campo mostrado na tela
        String CampoDia = campoDiaDiario.getText();
        
        // transformando a String CampoDia em variavel de data MeuDia.
        java.sql.Date MeuDia = null;  
        try {  
            DateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");  
            MeuDia = new java.sql.Date( ((java.util.Date)formatter.parse(CampoDia)).getTime() );
            
            // Somar um dia a variavel Data MeuDia e retorna MeuDia.
            MeuDia.setDate(MeuDia.getDate() + 1); 
            SimpleDateFormat ft = new SimpleDateFormat ("dd/MM/yyyy");
           // System.out.println("Cal:" +MeuDia);
            return ft.format(MeuDia);
            
        } catch (ParseException e) {              
            throw e;}   
    }
    
    private String DiaDeOntemDiario() throws ParseException{

        // pegando a data atual do campo mostrado na tela
        String CampoDia = campoDiaDiario.getText();
        
        // transformando a String CampoDia em variavel de data MeuDia.
        java.sql.Date MeuDia = null;  
        try {  
            DateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");  
            MeuDia = new java.sql.Date( ((java.util.Date)formatter.parse(CampoDia)).getTime() );
            
            // Subtrair um dia da variavel MeuDia e retornar MeuDia.
            MeuDia.setDate(MeuDia.getDate() - 1); 
            SimpleDateFormat ft = new SimpleDateFormat ("dd/MM/yyyy");
           // System.out.println("Cal:" +MeuDia);
            return ft.format(MeuDia);
            
        } catch (ParseException e) {              
            throw e;}       
    }
    
    private String DiaDeOntem() throws ParseException{

        // pegando a data atual do campo mostrado na tela
        String CampoDia = campoDatadeHoje.getText();
        
        // transformando a String CampoDia em variavel de data MeuDia.
        java.sql.Date MeuDia = null;  
        try {  
            DateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");  
            MeuDia = new java.sql.Date( ((java.util.Date)formatter.parse(CampoDia)).getTime() );
            
            // Subtrair um dia da variavel MeuDia e retornar MeuDia.
            MeuDia.setDate(MeuDia.getDate() - 1); 
            SimpleDateFormat ft = new SimpleDateFormat ("dd/MM/yyyy");
           // System.out.println("Cal:" +MeuDia);
            return ft.format(MeuDia);
            
        } catch (ParseException e) {              
            throw e;}       
    }
    
    private void MeuDiaDiario(String input){
        String d_Hora = "";
        String d_Alimento = "";
        String d_Kcal = "";
        String d_Proteina = "";
        String d_Carbo = "";
        String d_Gordura = "";
        
        campoDiaDiario.setText(input);
        modelManha = (DefaultTableModel) jTableManha.getModel();
        modelManha.setNumRows(0);
        modelTarde = (DefaultTableModel) jTableTarde.getModel();
        modelTarde.setNumRows(0);
        modelNoite = (DefaultTableModel) jTableNoite.getModel();
        modelNoite.setNumRows(0);
        
        // fazendo uma busca no banco de dados para preencher a tabela do período MANHA
        String s = "SELECT Hora, Alimento, Kcal, Proteina_Grama, Carboidrato_Grama, Gordura_Grama FROM Alimento where periodo = 'Manha' AND dia = '"+input+"' AND usuario = '"+p_Nome+"'"
                + "order by Hora, Alimento, Kcal, Proteina_grama, Carboidrato_grama, Gordura_grama;";
        try{
                    try (Connection conn = DriverManager.getConnection("jdbc:postgresql://127.0.0.1:5432/Contador_Caloria", "postgres",                                      "212889"))
                    {
                        System.out.println("Acessou o bando de dados com sucesso na função MeuDiaDiario!");
                        
                        conn.setAutoCommit(false);
                        Statement st = conn.createStatement();
                        ResultSet rs = st.executeQuery(s);
                        
                        while (rs.next())
                        {
                                //System.out.println("Kcal Consumida do usuario neste dia especifico: " + rs.getString(1));
                                d_Hora = rs.getString("Hora");
                                d_Alimento = rs.getString("Alimento");
                                d_Kcal = rs.getString("Kcal");
                                d_Proteina = rs.getString("Proteina_Grama");
                                d_Carbo = rs.getString("Carboidrato_Grama");
                                d_Gordura = rs.getString("Gordura_Grama");
                                
                                Double d_Kcal1 = Double.parseDouble(d_Kcal);
                                double p = Math.pow(10, 2), v = d_Kcal1*p;
                                v = Math.round(v);
                                v = v/p;
                                
                                Double d_Proteina1 = Double.parseDouble(d_Proteina);
                                double p1 = Math.pow(10, 2), v1 = d_Proteina1*p1;
                                v1 = Math.round(v1);
                                v1 = v1/p1;
                                
                                Double d_Carbo1 = Double.parseDouble(d_Carbo);
                                double p2 = Math.pow(10, 2), v2 = d_Carbo1*p2;
                                v2 = Math.round(v2);
                                v2 = v2/p2;
                                
                                Double d_Gordura1 = Double.parseDouble(d_Gordura);
                                double p3 = Math.pow(10, 2), v3 = d_Gordura1*p3;
                                v3 = Math.round(v3);
                                v3 = v3/p3;
                                
                                // Lista na tabela manha
                                modelManha = (DefaultTableModel) jTableManha.getModel();                                 
                                modelManha.addRow(new Object[]{""+d_Hora, ""+d_Alimento, ""+v, ""+v2, ""+v1, ""+v3}); 
                        } 
                        rs.close();
                        st.close(); 
                        conn.commit();
                    }
        }
        catch(SQLException e){
            System.out.println("FALHOU Busca periodo Manha!!");}
        
        
        // fazendo uma busca no banco de dados para preencher a tabela do período TARDE
        String s1 = "SELECT Hora, Alimento, Kcal, Proteina_Grama, Carboidrato_Grama, Gordura_Grama FROM Alimento where periodo = 'Tarde' AND dia = '"+input+"' AND usuario = '"+p_Nome+"'"
                + "order by Hora, Alimento, Kcal, Proteina_grama, Carboidrato_grama, Gordura_grama;";
        try{
                    try (Connection conn = DriverManager.getConnection("jdbc:postgresql://127.0.0.1:5432/Contador_Caloria", "postgres", "212889"))
                    {
                        System.out.println("Acessou o bando de dados com sucesso na função MeuDiaDiario!");
                        
                        conn.setAutoCommit(false);
                        Statement st = conn.createStatement();
                        ResultSet rs = st.executeQuery(s1);
                        
                        while (rs.next())
                        {
                                //System.out.println("Kcal Consumida do usuario neste dia especifico: " + rs.getString(1));
                                d_Hora = rs.getString("Hora");
                                d_Alimento = rs.getString("Alimento");
                                d_Kcal = rs.getString("Kcal");
                                d_Proteina = rs.getString("Proteina_Grama");
                                d_Carbo = rs.getString("Carboidrato_Grama");
                                d_Gordura = rs.getString("Gordura_Grama");
                                
                                Double d_Kcal1 = Double.parseDouble(d_Kcal);
                                double p = Math.pow(10, 2), v = d_Kcal1*p;
                                v = Math.round(v);
                                v = v/p;
                                
                                Double d_Proteina1 = Double.parseDouble(d_Proteina);
                                double p1 = Math.pow(10, 2), v1 = d_Proteina1*p1;
                                v1 = Math.round(v1);
                                v1 = v1/p1;
                                
                                Double d_Carbo1 = Double.parseDouble(d_Carbo);
                                double p2 = Math.pow(10, 2), v2 = d_Carbo1*p2;
                                v2 = Math.round(v2);
                                v2 = v2/p2;
                                
                                Double d_Gordura1 = Double.parseDouble(d_Gordura);
                                double p3 = Math.pow(10, 2), v3 = d_Gordura1*p3;
                                v3 = Math.round(v3);
                                v3 = v3/p3;
                                
                                // Lista na tabela manha
                                modelTarde = (DefaultTableModel) jTableTarde.getModel();                                 
                                modelTarde.addRow(new Object[]{""+d_Hora, ""+d_Alimento, ""+v, ""+v2, ""+v1, ""+v3}); 
                        } 
                        rs.close();
                        st.close(); 
                        conn.commit();
                    }
        }
        catch(SQLException e){
            System.out.println("FALHOU Busca periodo Tarde!!");}
        
        
        // fazendo uma busca no banco de dados para preencher a tabela do período MANHA
        String s2 = "SELECT Hora, Alimento, Kcal, Proteina_Grama, Carboidrato_Grama, Gordura_Grama FROM Alimento where periodo = 'Noite' AND dia = '"+input+"' AND usuario = '"+p_Nome+"'"
                + "order by Hora, Alimento, Kcal, Proteina_grama, Carboidrato_grama, Gordura_grama;";
        try{
                    try (Connection conn = DriverManager.getConnection("jdbc:postgresql://127.0.0.1:5432/Contador_Caloria", "postgres", "212889"))
                    {
                        System.out.println("Acessou o bando de dados com sucesso na função MeuDiaDiario!");
                        
                        conn.setAutoCommit(false);
                        Statement st = conn.createStatement();
                        ResultSet rs = st.executeQuery(s2);
                        
                        while (rs.next())
                        {
                                //System.out.println("Kcal Consumida do usuario neste dia especifico: " + rs.getString(1));
                                d_Hora = rs.getString("Hora");
                                d_Alimento = rs.getString("Alimento");
                                d_Kcal = rs.getString("Kcal");
                                d_Proteina = rs.getString("Proteina_Grama");
                                d_Carbo = rs.getString("Carboidrato_Grama");
                                d_Gordura = rs.getString("Gordura_Grama");
                                
                                Double d_Kcal1 = Double.parseDouble(d_Kcal);
                                double p = Math.pow(10, 2), v = d_Kcal1*p;
                                v = Math.round(v);
                                v = v/p;
                                
                                Double d_Proteina1 = Double.parseDouble(d_Proteina);
                                double p1 = Math.pow(10, 2), v1 = d_Proteina1*p1;
                                v1 = Math.round(v1);
                                v1 = v1/p1;
                                
                                Double d_Carbo1 = Double.parseDouble(d_Carbo);
                                double p2 = Math.pow(10, 2), v2 = d_Carbo1*p2;
                                v2 = Math.round(v2);
                                v2 = v2/p2;
                                
                                Double d_Gordura1 = Double.parseDouble(d_Gordura);
                                double p3 = Math.pow(10, 2), v3 = d_Gordura1*p3;
                                v3 = Math.round(v3);
                                v3 = v3/p3;
                                
                                // Lista na tabela manha
                                modelNoite = (DefaultTableModel) jTableNoite.getModel();                                 
                                modelNoite.addRow(new Object[]{""+d_Hora, ""+d_Alimento, ""+v, ""+v2, ""+v1, ""+v3}); 
                        } 
                        rs.close();
                        st.close(); 
                        conn.commit();
                    }
        }
        catch(SQLException e){
            System.out.println("FALHOU Busca periodo Noite!!");}
    }
    
    private void MeuDia(String input){
        
        String v_KcalGasta = "";
        String v_KcalConsumida = "";
        String v_ProteinaGConsumida = "";
        Double v_ProteinaKConsumida;
        String v_CarboGConsumida = "";
        Double v_CarboKConsumida;
        String v_GorduraGConsumida = "";
        Double v_GorduraKConsumida;
        Double v_KcalTotal;
        Double v_KcalRestante;
        Double v_ProteinaRestante;
        Double v_CarboRestante;
        Double v_GorduraRestante;
        Double vKC = 0.0;
        Double vKG = 0.0;
        
        // pega a data recebida como parametro o seta no campo Dia.
        //System.out.println(input);
        campoDatadeHoje.setText(""+input);       
        
        // descobrindo V_KcalConsumida no dia -> Soma das calorias da tabela alimento de um dado dia DO PERFIL QUE ESTÁ LOGADO.
        String s = "SELECT sum(KCAL) FROM Alimento where Dia = '"+input+"' AND Usuario = '"+p_Nome+"';";
        try{
                    try (Connection conn = DriverManager.getConnection("jdbc:postgresql://127.0.0.1:5432/Contador_Caloria", "postgres",                                      "212889"))
                    {
                        System.out.println("Acessou o bando de dados com sucesso!");
                        
                        conn.setAutoCommit(false);
                        Statement st = conn.createStatement();
                        ResultSet rs = st.executeQuery(s);
                        
                        while (rs.next())
                        {
                                //System.out.println("Kcal Consumida do usuario neste dia especifico: " + rs.getString(1));
                                v_KcalConsumida = rs.getString(1);
                                
                                if(v_KcalConsumida == null) // ESTÁ PROCURANDO EM UM DIA QUE AINDA NÃO FOI INICIALIZADO NO BANCO OU QUE NÃO TEM ESSE REGISTRO.
                                    campoKcalConsumida.setText(""+0);
                                else{
                                // deixando com 2 casas decimais
                                // criação da v_KcalConsumida1 para transformar em double
                                Double v_KcalConsumida1 = Double.parseDouble(v_KcalConsumida);
                                double p = Math.pow(10, 2), v = v_KcalConsumida1*p;
                                v = Math.round(v);
                                v = v/p;
                                campoKcalConsumida.setText(""+v);
                                vKC = v;}
                        } 
                        rs.close();
                        st.close(); 
                        conn.commit();
                    }
        }
        catch(SQLException e){
            System.out.println("FALHOU 1!!");}
        
         // descobrindo v_KcalGasta no dia -> Soma das calorias da tabela exercicio de um dado dia DO PERFIL LOGADO.
        String s1 = "SELECT sum(kcalGasta) FROM Exercicio where Dia = '"+input+"' AND Usuario = '"+p_Nome+"';";
        try{
                    try (Connection conn = DriverManager.getConnection("jdbc:postgresql://127.0.0.1:5432/Contador_Caloria", "postgres","212889"))
                    {
                        System.out.println("Acessou o bando de dados com sucesso!");
                        conn.setAutoCommit(false);
                        Statement st = conn.createStatement();
                        ResultSet rs = st.executeQuery(s1);
                       
                        while (rs.next())
                        {
                                //System.out.println("Kcal total GASTA do usuario neste dia especifico: " + rs.getString(1));
                                v_KcalGasta = rs.getString(1);
                                
                                if(v_KcalGasta == null) // ESTÁ PROCURANDO EM UM DIA QUE AINDA NÃO FOI INICIALIZADO NO BANCO OU QUE NÃO TEM ESSE REGISTRO.
                                    campoKcalGasta.setText(""+0);
                                else{
                                // criação da v_KcalGasta1 para transformar em double
                                Double v_KcalGasta1 = Double.parseDouble(v_KcalGasta);
                                double p = Math.pow(10, 2), v = v_KcalGasta1*p;
                                v = Math.round(v);
                                v = v/p;
                                campoKcalGasta.setText(""+v);
                                vKG = v;}
                        } 
                        rs.close();
                        st.close(); 
                        conn.commit();
                    }
        }
        catch(SQLException e){
            System.out.println("FALHOU 2!!");}
        
        // descobrindo v_KcalTotal no dia -> Diferença das calorias consumidas e gastas.
        if(v_KcalConsumida == null && v_KcalGasta == null) // nenhum registro nesse dia especifico
        {
            v_KcalTotal = 0.0;
            campoKcalTotal.setText(""+v_KcalTotal);}
        
        else if(v_KcalConsumida != null && v_KcalGasta == null){ // só tiver consumido
                 v_KcalTotal = vKC;
                 campoKcalTotal.setText(""+v_KcalTotal);}
        
              else if(v_KcalConsumida == null && v_KcalGasta != null){ // só tiver gasto
                 v_KcalTotal = vKG;
                 campoKcalTotal.setText(""+v_KcalTotal);}
              
        else{
            v_KcalTotal = Double.parseDouble(v_KcalConsumida) - Double.parseDouble(v_KcalGasta);
            double p = Math.pow(10, 2), v = v_KcalTotal*p;
            v = Math.round(v);
            v = v/p;
            campoKcalTotal.setText(""+v);}
        
        
        // descobrindo o quanto ainda pode ser consumido de kcal
        if(v_KcalTotal == 0.0){
            v_KcalRestante = p_Basal1;
            campoKcalRestante.setText(""+v_KcalRestante);}
        
        else if(v_KcalConsumida != null && v_KcalGasta == null){
                v_KcalRestante = Double.parseDouble(p_Basal) - vKC;
                double p1 = Math.pow(10, 2), v1 = v_KcalRestante*p1;
                v1 = Math.round(v1);
                v1 = v1/p1;
                campoKcalRestante.setText(""+v1);}
        
            else if (v_KcalConsumida == null && v_KcalGasta != null){ // só tiver gasto
                v_KcalRestante = Double.parseDouble(p_Basal) + vKG;
                campoKcalRestante.setText(""+v_KcalRestante);}
        else{
            v_KcalRestante = Double.parseDouble(p_Basal) - v_KcalTotal;
            double p1 = Math.pow(10, 2), v1 = v_KcalRestante*p1;
            v1 = Math.round(v1);
            v1 = v1/p1;
            campoKcalRestante.setText(""+v1);}
        
        if(v_KcalRestante > 0)
            campoKcalRestante.setBackground(new java.awt.Color(0, 102, 204));
        if(v_KcalRestante < 0)
            campoKcalRestante.setBackground(new java.awt.Color(255, 0, 0));
        
        // descobrindo o quanto de proteina já foi consumido.
        String s2 = "SELECT sum(Proteina_grama) FROM Alimento where Dia = '"+input+"' AND Usuario = '"+p_Nome+"';";
        try{
                    try (Connection conn = DriverManager.getConnection("jdbc:postgresql://127.0.0.1:5432/Contador_Caloria", "postgres", "212889"))
                    {
                        System.out.println("Acessou o bando de dados com sucesso!");
                        
                        conn.setAutoCommit(false);
                        Statement st = conn.createStatement();
                        ResultSet rs = st.executeQuery(s2);
                        
                        while (rs.next())
                        {
                                //System.out.println("Proteina em Gramas total do usuario neste dia especifico: " + rs.getString(1));
                                v_ProteinaGConsumida = rs.getString(1);
                                if(v_ProteinaGConsumida == null)
                                    campoProteinaGConsumida.setText(""+0);
                                else{
                                Double v_ProteinaGConsumida1 = Double.parseDouble(v_ProteinaGConsumida);
                                double p2 = Math.pow(10, 2), v2 = v_ProteinaGConsumida1*p2;
                                v2 = Math.round(v2);
                                v2 = v2/p2;
                                campoProteinaGConsumida.setText(""+v2);}
                        } 
                        rs.close();
                        st.close(); 
                        conn.commit();
                    }
        }
        catch(SQLException e){
            System.out.println("FALHOU 3!!");}        
     
        // descobrindo quantidade já consumida de proteina em kcal
        if(v_ProteinaGConsumida == null){
            v_ProteinaKConsumida = 0.0;
            campoProteinaKConsumida.setText(""+v_ProteinaKConsumida);}
        else{
            v_ProteinaKConsumida = (Double.parseDouble(v_ProteinaGConsumida) * 4.3);
            double p3 = Math.pow(10, 2), v3 = v_ProteinaKConsumida*p3;
            v3 = Math.round(v3);
            v3 = v3/p3;
            campoProteinaKConsumida.setText(""+v3);}
        
        // decobrindo a quantidade restante que ainda ha pra ser consumida de proteina em gramas
        if(v_ProteinaGConsumida == null){
             v_ProteinaRestante = p_ProteinaG1;
             campoProteinaRestante.setText(""+v_ProteinaRestante);}
        else{
            v_ProteinaRestante = Double.parseDouble(p_ProteinaG) - Double.parseDouble(v_ProteinaGConsumida);
            double p4 = Math.pow(10, 2), v4 = v_ProteinaRestante*p4;
            v4 = Math.round(v4);
            v4 = v4/p4;
            campoProteinaRestante.setText(""+v4);}
        
        if(v_ProteinaRestante > 0)
            campoProteinaRestante.setBackground(new java.awt.Color(0, 102, 204));
        if(v_ProteinaRestante < 0)
            campoProteinaRestante.setBackground(new java.awt.Color(255, 0, 0));
        
    
        // descobrindo o quanto de CARBOIDRATO já foi consumido.
        String s3 = "SELECT sum(Carboidrato_grama) FROM Alimento where Dia = '"+input+"' AND Usuario = '"+p_Nome+"';";
        try{
                    try (Connection conn = DriverManager.getConnection("jdbc:postgresql://127.0.0.1:5432/Contador_Caloria", "postgres","212889"))
                    {
                        System.out.println("Acessou o bando de dados com sucesso!");
                        
                        conn.setAutoCommit(false);
                        Statement st = conn.createStatement();
                        ResultSet rs = st.executeQuery(s3);
                        
                        while (rs.next())
                        {
                                //System.out.println("Carboidrato em grama total do usuario neste dia especifico: " + rs.getString(1));
                                v_CarboGConsumida = rs.getString(1);
                                
                                if(v_CarboGConsumida == null)
                                    campoCarboGConsumida.setText(""+0);
                                else{
                                Double v_CarboGConsumida1 = Double.parseDouble(v_CarboGConsumida);
                                double p5 = Math.pow(10, 2), v5 = v_CarboGConsumida1*p5;
                                v5 = Math.round(v5);
                                v5 = v5/p5;
                                campoCarboGConsumida.setText(""+v5);}
                        } 
                        rs.close();
                        st.close(); 
                        conn.commit();
                    }
        }
        catch(SQLException e){
            System.out.println("FALHOU 4!!");}        
     
        // descobrindo quantidade já consumida de CARBOIDRATO em kcal
        if(v_CarboGConsumida == null){
            v_CarboKConsumida = 0.0;
            campoCarboKConsumida.setText(""+v_CarboKConsumida);}
        else{
            v_CarboKConsumida = (Double.parseDouble(v_CarboGConsumida) * 4.1);
            double p6 = Math.pow(10, 2), v6 = v_CarboKConsumida*p6;
            v6 = Math.round(v6);
            v6 = v6/p6;
            campoCarboKConsumida.setText(""+ v6);}
        
        // decobrindo a quantidade restante que ainda ha pra ser consumida de Carboidrato em gramas
        if(v_CarboGConsumida == null){
            v_CarboRestante = p_CarboG1;
            campoCarboRestante.setText(""+v_CarboRestante);}
        else{
            v_CarboRestante = Double.parseDouble(p_CarboG) - Double.parseDouble(v_CarboGConsumida);
            double p7 = Math.pow(10, 2), v7 = v_CarboRestante*p7;
            v7 = Math.round(v7);
            v7 = v7/p7;
            campoCarboRestante.setText(""+v7);}
        
        if(v_CarboRestante > 0)
            campoCarboRestante.setBackground(new java.awt.Color(0, 102, 204));
        if(v_CarboRestante < 0)
            campoCarboRestante.setBackground(new java.awt.Color(255, 0, 0));
        
        
        
        // descobrindo o quanto de GORDURA já foi consumido.
        String s4 = "SELECT sum(Gordura_grama) FROM Alimento where Dia = '"+input+"' AND Usuario = '"+p_Nome+"';";
        try{
                    try (Connection conn = DriverManager.getConnection("jdbc:postgresql://127.0.0.1:5432/Contador_Caloria", "postgres", "212889"))
                    {
                        System.out.println("Acessou o bando de dados com sucesso!");
                        
                        conn.setAutoCommit(false);
                        Statement st = conn.createStatement();
                        ResultSet rs = st.executeQuery(s4);
                        
                        while (rs.next())
                        {
                                //System.out.println("Gordura em gramas total do usuario neste dia especifico: " + rs.getString(1));
                                v_GorduraGConsumida = rs.getString(1);
                                
                                 if(v_GorduraGConsumida == null)
                                    campoGorduraGConsumida.setText(""+0);
                                else{
                                Double v_GorduraGConsumida1 = Double.parseDouble(v_GorduraGConsumida);
                                double p8 = Math.pow(10, 2), v8 = v_GorduraGConsumida1*p8;
                                v8 = Math.round(v8);
                                v8 = v8/p8;
                                campoGorduraGConsumida.setText(""+v8);}
                        } 
                        rs.close();
                        st.close(); 
                        conn.commit();
                    }
        }
        catch(SQLException e){
            System.out.println("FALHOU 5!!");}        
     
        // descobrindo quantidade já consumida de Gordura em kcal
        if(v_GorduraGConsumida == null){
            v_GorduraKConsumida = 0.0;
            campoGorduraKConsumida.setText(""+v_GorduraKConsumida);}
        else{
            v_GorduraKConsumida = (Double.parseDouble(v_GorduraGConsumida) * 9.3);
            double p9 = Math.pow(10, 2), v9 = v_GorduraKConsumida*p9;
            v9 = Math.round(v9);
            v9 = v9/p9;
            campoGorduraKConsumida.setText(""+ v9);}
        
        // decobrindo a quantidade restante que ainda ha pra ser consumida de Gordura em gramas
        if(v_GorduraGConsumida == null){
            v_GorduraRestante = p_GorduraG1;
            campoGorduraRestante.setText(""+v_GorduraRestante);}
        else{
            v_GorduraRestante = Double.parseDouble(p_GorduraG) - Double.parseDouble(v_GorduraGConsumida);
            double p10 = Math.pow(10, 2), v10 = v_GorduraRestante*p10;
            v10 = Math.round(v10);
            v10 = v10/p10;
            campoGorduraRestante.setText(""+v10);}
        
        if(v_GorduraRestante > 0)
            campoGorduraRestante.setBackground(new java.awt.Color(0, 102, 204));
        if(v_GorduraRestante < 0)
            campoGorduraRestante.setBackground(new java.awt.Color(255, 0, 0));
        
        
        // descobrindo os alimentos que ja foram consumdos para escrever no aviso.
        String s5 = "SELECT Alimento, Hora FROM Alimento where Dia = '"+input+"' AND Usuario = '"+p_Nome+"' order by Hora, Alimento;";
        try{
                    try (Connection conn = DriverManager.getConnection("jdbc:postgresql://127.0.0.1:5432/Contador_Caloria", "postgres","212889"))
                    {
                        System.out.println("Acessou o bando de dados com sucesso!");
                        
                        conn.setAutoCommit(false);
                        Statement st = conn.createStatement();
                        ResultSet rs = st.executeQuery(s5);
                        ArrayList<String> resultA = new ArrayList();
                        ArrayList<String> resultH = new ArrayList();
                        
                        while (rs.next())
                        {
                            //System.out.println("Carboidrato em grama total do usuario neste dia especifico: " + rs.getString(1));
                            resultA.add(rs.getString("Alimento"));
                            resultH.add(rs.getString("Hora"));
                            
                        } 
                        areaAviso.setText("-> Alimentos consumidos hoje:\n=============================");
                        for (int i = 0; i < resultA.size(); i++) {  
                            areaAviso.setText(areaAviso.getText()+'\n'+"- "+resultA.get(i)+"  ("+resultH.get(i)+")");}
                        
                        rs.close();
                        st.close(); 
                        conn.commit();
                    }
        }
        catch(SQLException e){
            System.out.println("FALHOU 4!!");}  
               
    }
    
    public void insert(String S) throws SQLException { 
            //DriverManager.registerDriver(new com.mysql.jdbc.Driver());
            
            Connection conn = DriverManager.getConnection( 
                                    "jdbc:postgresql://127.0.0.1:5432/Contador_Caloria", "postgres",
                                    "212889"); 
            conn.setAutoCommit(false); 
            Statement st = conn.createStatement(); 
            
            st.executeUpdate(S); 
            st.close(); 
            conn.commit(); 
            conn.close(); 
            System.out.println("Inserido com Sucesso!!!!");
            
            JOptionPane.showMessageDialog(this,
            "Inserido com SUCESSO!!",
            "Error Message",
            JOptionPane.INFORMATION_MESSAGE);
            
    }
    
    public void MensagemNull(){
        JOptionPane.showMessageDialog(this,
            "Dados em Branco!!",
            "Error Message",
            JOptionPane.ERROR_MESSAGE);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inicial().setVisible(true);
                ConexaoBD c = new ConexaoBD();
                try {
                    c.Check();
                } catch (SQLException ex) {
                    Logger.getLogger(Inicial.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea areaAjuda;
    private javax.swing.JTextArea areaAviso;
    private javax.swing.JButton bottonAnteriorDiario;
    private javax.swing.JButton buttonAnterior;
    private javax.swing.JButton buttonAvancarDiario;
    private javax.swing.JButton buttonAvanco;
    private javax.swing.JButton buttonDiario;
    private javax.swing.JButton buttonEscolher;
    private javax.swing.ButtonGroup buttonGroupPeriodo;
    private javax.swing.ButtonGroup buttonGroupPeriodoExercicio;
    private javax.swing.JButton buttonInserirNovo;
    private javax.swing.JButton buttonLimparAdd;
    private javax.swing.JButton buttonLimparExercicio;
    private javax.swing.JButton buttonListaAimentos;
    private javax.swing.JButton buttonMaisAlimento;
    private javax.swing.JButton buttonMaisExercicio;
    private javax.swing.JButton buttonSalvarAdd;
    private javax.swing.JButton buttonSalvarExercicio;
    private javax.swing.JButton buttonVoltarDiario;
    private javax.swing.JButton buttonVoltarLista;
    private javax.swing.JTextArea campoAlimento;
    private javax.swing.JTextField campoAlturaPerfil;
    private javax.swing.JTextField campoBasalPerfil;
    private javax.swing.JTextField campoCarboGAdd;
    private javax.swing.JTextField campoCarboGConsumida;
    private javax.swing.JTextField campoCarboGPerfil;
    private javax.swing.JTextField campoCarboKConsumida;
    private javax.swing.JTextField campoCarboKPerfil;
    private javax.swing.JTextField campoCarboRestante;
    private javax.swing.JFormattedTextField campoDataExercicio;
    private javax.swing.JFormattedTextField campoDatadeHoje;
    private javax.swing.JFormattedTextField campoDia;
    private javax.swing.JTextField campoDiaDiario;
    private javax.swing.JTextArea campoExercicio;
    private javax.swing.JTextField campoGorduraGAdd;
    private javax.swing.JTextField campoGorduraGConsumida;
    private javax.swing.JTextField campoGorduraGPerfil;
    private javax.swing.JTextField campoGorduraKConsumida;
    private javax.swing.JTextField campoGorduraKPerfil;
    private javax.swing.JTextField campoGorduraRestante;
    private javax.swing.JFormattedTextField campoHora;
    private javax.swing.JFormattedTextField campoHorarioExercicio;
    private javax.swing.JTextField campoIdadePerfil;
    private javax.swing.JTextField campoKcal;
    private javax.swing.JTextField campoKcalConsumida;
    private javax.swing.JTextField campoKcalExercicio;
    private javax.swing.JTextField campoKcalGasta;
    private javax.swing.JTextField campoKcalRestante;
    private javax.swing.JTextField campoKcalTotal;
    private javax.swing.JTextField campoMetodoPerfil;
    private javax.swing.JTextField campoNivelPerfil;
    private javax.swing.JTextField campoNomePerfil;
    private javax.swing.JTextField campoObjPerfil;
    private javax.swing.JTextField campoPesoPerfil;
    private javax.swing.JTextField campoPorcao;
    private javax.swing.JTextField campoProteinaGAdd;
    private javax.swing.JTextField campoProteinaGConsumida;
    private javax.swing.JTextField campoProteinaGPerfil;
    private javax.swing.JTextField campoProteinaKConsumida;
    private javax.swing.JTextField campoProteinaKPerfil;
    private javax.swing.JTextField campoProteinaRestante;
    private javax.swing.JTextField campoQntd;
    private javax.swing.JTextField campoQntdExercicio;
    private javax.swing.JTextField campoSexoPerfil;
    private javax.swing.JTextField campoTendenciaPerfil;
    private javax.swing.JTextField campoUsuarioDiario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JSeparator jSeparator15;
    private javax.swing.JSeparator jSeparator16;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTableManha;
    private javax.swing.JTable jTableNoite;
    private javax.swing.JTable jTableTarde;
    private javax.swing.JTextArea jTextArea12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JMenu menuAdicionar;
    private javax.swing.JMenu menuAdicionarCadastro;
    private javax.swing.JMenu menuAjuda;
    private javax.swing.JMenu menuEntrar;
    private javax.swing.JMenu menuLogout;
    private javax.swing.JMenu menuManual;
    private javax.swing.JMenu menuSair;
    private javax.swing.JLayeredPane painelAddAlimento;
    private javax.swing.JLayeredPane painelAddExercicio;
    private javax.swing.JLayeredPane painelAjuda;
    private javax.swing.JLayeredPane painelDiario;
    private javax.swing.JPanel painelFigura;
    private javax.swing.JLayeredPane painelInicial;
    private javax.swing.JLayeredPane painelListaAlimentos;
    private java.awt.PopupMenu popupMenu1;
    private javax.swing.JRadioButton radioManha;
    private javax.swing.JRadioButton radioManhaExercicio;
    private javax.swing.JRadioButton radioNoite;
    private javax.swing.JRadioButton radioNoiteExercicio;
    private javax.swing.JRadioButton radioTarde;
    private javax.swing.JRadioButton radioTardeExercicio;
    // End of variables declaration//GEN-END:variables
    
    DefaultTableModel model;
    DefaultTableModel modelManha;
    DefaultTableModel modelTarde;
    DefaultTableModel modelNoite;
    
    // declaração de variável para recuperação do perfil do usuário.
    private String p_Nome;
    private String p_Idade;
    private String p_Sexo;
    private String p_Altura;
    private String p_Peso;
    private String p_Objetivo;
    private String p_Tendencia;
    private String p_Basal;
    private Double p_Basal1;
    private String p_ProteinaG;
    private Double p_ProteinaG1;
    private String p_ProteinaK;
    private Double p_ProteinaK1;
    private String p_CarboG;
    private Double p_CarboG1;
    private String p_CarboK;
    private Double p_CarboK1;
    private String p_GorduraG;
    private Double p_GorduraG1;
    private String p_GorduraK;
    private Double p_GorduraK1;
    private String p_Senha;
    private String p_Metodo;
    private String p_NivelAtividade;

public class Login extends javax.swing.JFrame {

    public Login() {
        initComponents();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        campoNome = new javax.swing.JTextField();
        campoSenha = new javax.swing.JPasswordField();
        buttonOk = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Login");

        jLabel1.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        jLabel1.setText("Nome de Usuário:");

        jLabel2.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        jLabel2.setText("Senha (caso exista):");

        buttonOk.setText("OK");
        buttonOk.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonOkMouseClicked(evt);
            }
        });
        campoNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                campoNomeKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(campoNome)
                            .addComponent(campoSenha, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addComponent(buttonOk, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(campoNome))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(buttonOk, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>                        

    
    private void campoNomeKeyPressed(java.awt.event.KeyEvent evt) {                                              
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER){
            Usuario = campoNome.getText();
            Senha = campoSenha.getText();
        
            if(ConsultarLogin(Senha,Usuario))
            {
                System.out.println("Logado com sucesso!");
                this.dispose();        
                // APOS LOGAR DEVE-SE LIBERAR AS FUNÇÕES PARA USO DO PROGRAMA
                logadoSucesso();           
            }
            else
            {
                System.out.println("Login inválido!");
                JOptionPane.showMessageDialog(this,
                "Cadastro não encontrado!!",
                "Error Message",
                JOptionPane.ERROR_MESSAGE);
            }
        }
            
    }                        
     
    
    private void buttonOkMouseClicked(java.awt.event.MouseEvent evt) {                                      
        // variável Usuario e Senha capturam os campos Nome e Senha e é chamada a função ConsultarLogin
        Usuario = campoNome.getText();
        Senha = campoSenha.getText();
        
        if(ConsultarLogin(Senha,Usuario))
        {
            System.out.println("Logado com sucesso!");
            this.dispose();        
            // APOS LOGAR DEVE-SE LIBERAR AS FUNÇÕES PARA USO DO PROGRAMA
            logadoSucesso();           
        }
        else
        {
            System.out.println("Login inválido!");
            JOptionPane.showMessageDialog(this,
            "Cadastro não encontrado!!",
            "Error Message",
            JOptionPane.ERROR_MESSAGE);
            campoNome.setText("");
            campoSenha.setText("");
        }
    }                                     
   
    private boolean ConsultarLogin(String input, String user){
        // função consultarLogin verifica no banco de dados de quem é o perfil e puxa a ficha dessa pessoa
    
        boolean retorno = false;
        String s;
        int flag = 0;
               
        if(flag == 0){
                s = "Select * from Usuario"
                    + " where Nome = '"+user+"' AND Senha = '"+input+"';";
                System.out.println("Formou a query 's': " +s);               
                try{
                    try (Connection conn = DriverManager.getConnection("jdbc:postgresql://127.0.0.1:5432/Contador_Caloria", "postgres",
                                                         "212889"))
                    {
                        System.out.println("Logado com sucesso no banco de dados do sistema.");
                        
                        conn.setAutoCommit(false); 
                        Statement st = conn.createStatement();
                        ResultSet rs = st.executeQuery(s);

                        while (rs.next()) {
                            flag = 1;
                                //System.out.println("Nome do Usuário buscado: " + rs.getString("Nome"));
                                    p_Nome = rs.getString("Nome");
                                  
                                //System.out.println("Idade do Usuário buscado: " + rs.getString("Idade"));
                                    p_Idade = rs.getString("Idade");
                                    
                                //System.out.println("Sexo do Usuário buscado: " + rs.getString("Sexo"));
                                    p_Sexo = rs.getString("Sexo");
                                
                                //System.out.println("Altura do Usuário buscado: " + rs.getString("Altura"));
                                    p_Altura = rs.getString("Altura");
                                    
                                //System.out.println("Peso do Usuário buscado: " + rs.getString("Peso"));
                                    p_Peso = rs.getString("Peso");
                                    
                                //System.out.println("Objetivo do Usuário buscado: " + rs.getString("Objetivo"));
                                    p_Objetivo = rs.getString("Objetivo");
                                    
                                //System.out.println("Tendencia do Usuário buscado: " + rs.getString("Tendencia"));
                                    p_Tendencia = rs.getString("Tendencia");
                                    
                                //System.out.println("Basal do Usuário buscado: " + rs.getString("Basal"));
                                    p_Basal = rs.getString("Basal");
                                    p_Basal1 = Double.parseDouble(p_Basal);
                                    double p0 = Math.pow(10, 2), v0 = p_Basal1*p0;
                                    v0 = Math.round(v0);
                                    v0 = v0/p0;
                                    p_Basal1 = v0;
                                    
                                //System.out.println("Proteina em gramas do Usuário buscado: " + rs.getString("Proteina_grama"));
                                    p_ProteinaG = rs.getString("Proteina_grama");
                                    p_ProteinaG1 = Double.parseDouble(p_ProteinaG);
                                    double p1 = Math.pow(10, 2), v1 = p_ProteinaG1*p1;
                                    v1 = Math.round(v1);
                                    v1 = v1/p1;
                                    p_ProteinaG1 = v1;
                                    
                                //System.out.println("Proteina em kcal do Usuário buscado: " + rs.getString("Proteina_Kcal"));
                                    p_ProteinaK = rs.getString("Proteina_Kcal");
                                    p_ProteinaK1 = Double.parseDouble(p_ProteinaK);
                                    double p2 = Math.pow(10, 2), v2 = p_ProteinaK1*p2;
                                    v2 = Math.round(v2);
                                    v2 = v2/p2;
                                    p_ProteinaK1 = v2;
                                    
                                //System.out.println("Carboidrato em grama do Usuário buscado: " + rs.getString("Carboidrato_grama"));
                                    p_CarboG = rs.getString("Carboidrato_grama");
                                    p_CarboG1 = Double.parseDouble(p_CarboG);
                                    double p3 = Math.pow(10, 2), v3 = p_CarboG1*p3;
                                    v3 = Math.round(v3);
                                    v3 = v3/p3;
                                    p_CarboG1 = v3;
                                    
                                //System.out.println("Carboidrato em kcal do Usuário buscado: " + rs.getString("Carboidrato_kcal"));
                                    p_CarboK = rs.getString("Carboidrato_kcal");
                                    p_CarboK1 = Double.parseDouble(p_CarboK);
                                    double p4 = Math.pow(10, 2), v4 = p_CarboK1*p4;
                                    v4 = Math.round(v4);
                                    v4 = v4/p4;
                                    p_CarboK1 = v4;
                                    
                                //System.out.println("Gordura em grama do Usuário buscado: " + rs.getString("Gordura_grama"));
                                    p_GorduraG = rs.getString("Gordura_grama");
                                    p_GorduraG1 = Double.parseDouble(p_GorduraG);
                                    double p5 = Math.pow(10, 2), v5 = p_GorduraG1*p5;
                                    v5 = Math.round(v5);
                                    v5 = v5/p5;
                                    p_GorduraG1 = v5;
                                    
                                //System.out.println("Gordura em kcal do Usuário buscado: " + rs.getString("Gordura_kcal"));
                                    p_GorduraK = rs.getString("Gordura_kcal");
                                    p_GorduraK1 = Double.parseDouble(p_GorduraK);
                                    double p6 = Math.pow(10, 2), v6 = p_GorduraK1*p6;
                                    v6 = Math.round(v6);
                                    v6 = v6/p6;
                                    p_GorduraK1 = v6;
                                    
                                //System.out.println("Senha do Usuário buscado: " + rs.getString("Senha"));
                                    p_Senha = rs.getString("Senha");
                                    
                                //System.out.println("Metodo do usuario: " + rs.getString("Metodo"));
                                    p_Metodo = rs.getString("Metodo");
                                    
                                //System.out.println("Nível de Atividade do usuario: " + rs.getString("NivelAtividade"));
                                    p_NivelAtividade = rs.getString("NivelAtividade");
                                    
                                System.out.println("========================================");
                                retorno = true;
                        } 
                        rs.close();
                        st.close(); 
                        conn.commit();
                    }
                        return retorno;
                }
                catch(SQLException e){
                        System.out.println("Busca de Login falhou..");
                        return retorno = false;
                }
        }
       return retorno;      
    }
    
    private void logadoSucesso(){
        // apos logado com sucesso, abre o programa com as variaveis do usuario logado.
        painelFigura.setVisible(false);
        painelDiario.setVisible(false);
        painelListaAlimentos.setVisible(false);
        painelInicial.setVisible(true);
        painelAddAlimento.setVisible(true);
        painelAddExercicio.setVisible(false);
        painelAjuda.setVisible(false);
        campoDia.setText(""+DiaDeHoje());
        
       // System.out.println("p_Nome:" +p_Nome);
        campoNomePerfil.setText(""+p_Nome);
       // System.out.println("p_Peso:" +p_Peso);
        campoPesoPerfil.setText(""+p_Peso);
       // System.out.println("p_Altura:" +p_Altura);
        campoAlturaPerfil.setText(""+p_Altura);
       // System.out.println("p_Idade:" +p_Idade);
        campoIdadePerfil.setText(""+p_Idade);
       // System.out.println("p_Sexo:" +p_Sexo);
        campoSexoPerfil.setText(""+p_Sexo);
       // System.out.println("p_Objetivo:" +p_Objetivo);
        campoObjPerfil.setText(""+p_Objetivo);
       // System.out.println("p_Tendencia:" +p_Tendencia);
        campoTendenciaPerfil.setText(""+p_Tendencia);
       // System.out.println("p_Basal1:" +p_Basal1);
        campoBasalPerfil.setText(""+p_Basal1);
       // System.out.println("p_ProteinaG1:" +p_ProteinaG1);
        campoProteinaGPerfil.setText(""+p_ProteinaG1);
       // System.out.println("p_ProteinaK1:" +p_ProteinaK1);
        campoProteinaKPerfil.setText(""+p_ProteinaK1);
       // System.out.println("p_CarboG1:" +p_CarboG1);
        campoCarboGPerfil.setText(""+p_CarboG1);
       // System.out.println("p_CarboK1:" +p_CarboK1);
        campoCarboKPerfil.setText(""+p_CarboK1);
       // System.out.println("p_GorduraG1:" +p_GorduraG1);
        campoGorduraGPerfil.setText(""+p_GorduraG1);
       // System.out.println("p_GorduraK1:" +p_GorduraK1);
        campoGorduraKPerfil.setText(""+p_GorduraK1);
       // System.out.println("p_Nome:" +p_Nome);
        campoMetodoPerfil.setText(""+p_Metodo);
       // System.out.println("p_Nome:" +p_Nome);
        campoNivelPerfil.setText(""+p_NivelAtividade);
        
        // chama método MeuDia para iniciar aba Meu Dia!! com dados do usuario p_Nome.
         MeuDia(DiaDeHoje());
    }
    
    // Variables declaration - from LOGIN                    
    private javax.swing.JButton buttonOk;
    private javax.swing.JTextField campoNome;
    private javax.swing.JPasswordField campoSenha;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;                
    private String Senha;
    private String Usuario;
}

public class InserirAlimentoBD extends javax.swing.JFrame {

    /**
     * Creates new form InserirAlimentBD
     */
    public InserirAlimentoBD() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        campoMarca = new javax.swing.JTextField();
        campoNome = new javax.swing.JTextField();
        campoDescricao = new javax.swing.JTextField();
        campoPorcao = new javax.swing.JTextField();
        campoKcal = new javax.swing.JTextField();
        campoProteina = new javax.swing.JTextField();
        campoGordura = new javax.swing.JTextField();
        campoCarboidrato = new javax.swing.JTextField();
        buttonLimpar = new javax.swing.JButton();
        buttonInserir = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel1.setText("Nome:");

        jLabel2.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel2.setText("Marca:");

        jLabel3.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel3.setText("Descrição:");

        jLabel4.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel4.setText("Kcal:");

        jLabel5.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel5.setText("Carboidrato:");

        jLabel6.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel6.setText("Proteina:");

        jLabel7.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel7.setText("Gordura:");

        jLabel8.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel8.setText("Porção:");

        buttonLimpar.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        buttonLimpar.setText("Limpar");
        buttonLimpar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonLimparMouseClicked(evt);
            }
        });

        buttonInserir.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        buttonInserir.setText("Inserir");
        buttonInserir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                try {
                    buttonInserirMouseClicked(evt);
                } catch (SQLException ex) {
                    Logger.getLogger(Inicial.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });

        jLabel9.setText("Kcal");

        jLabel10.setText("g");

        jLabel11.setText("g");

        jLabel12.setText("g");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel8)
                            .addComponent(jLabel4)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel5))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(buttonLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel7)))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 166, Short.MAX_VALUE)
                        .addComponent(buttonInserir, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(campoPorcao, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(campoDescricao)
                            .addComponent(campoMarca)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(campoGordura, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                                    .addComponent(campoProteina, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(campoCarboidrato, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(campoKcal, javax.swing.GroupLayout.Alignment.LEADING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(campoNome))
                        .addGap(15, 15, 15))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoNome, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoPorcao, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoKcal, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoCarboidrato, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoProteina, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoGordura, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonInserir, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>                        

    private void buttonInserirMouseClicked(java.awt.event.MouseEvent evt) throws SQLException {                                           
        // TODO add your handling code here:
        String Nome = campoNome.getText();
        String Marca = campoMarca.getText();
        String Descricao = campoDescricao.getText();
        String Porcao = campoPorcao.getText();
        String Kcal = campoKcal.getText();
        String Carboidrato = campoCarboidrato.getText();
        String Proteina = campoProteina.getText();
        String Gordura = campoGordura.getText();
        
        String s = "INSERT into Comida values('"+Nome+"','"+Marca+"','"+Descricao+"',"+Kcal+","+Carboidrato+","+Proteina+","+Gordura+",'"+Porcao+"');";
        
        //DriverManager.registerDriver(new com.mysql.jdbc.Driver());
            
            Connection conn = DriverManager.getConnection( 
                                    "jdbc:postgresql://127.0.0.1:5432/Contador_Caloria", "postgres",
                                    "212889"); 
            conn.setAutoCommit(false); 
            Statement st = conn.createStatement(); 
            
            st.executeUpdate(s); 
            st.close(); 
            conn.commit(); 
            conn.close(); 
            System.out.println("Inserido com Sucesso!!!!");
            
            JOptionPane.showMessageDialog(this,
            "Inserido com SUCESSO!!",
            "Error Message",
            JOptionPane.INFORMATION_MESSAGE);
            
            AtualizarTabela();
        dispose();
    }                                          
    
    private void buttonLimparMouseClicked(java.awt.event.MouseEvent evt) {                                          
        // TODO add your handling code here:
        campoNome.setText("");
        campoMarca.setText("");
        campoDescricao.setText("");
        campoPorcao.setText("");
        campoKcal.setText("");
        campoCarboidrato.setText("");
        campoProteina.setText("");
        campoGordura.setText("");
    }                                         
    
    // Variables declaration - do not modify                     
    private javax.swing.JButton buttonInserir;
    private javax.swing.JButton buttonLimpar;
    private javax.swing.JTextField campoCarboidrato;
    private javax.swing.JTextField campoDescricao;
    private javax.swing.JTextField campoGordura;
    private javax.swing.JTextField campoKcal;
    private javax.swing.JTextField campoMarca;
    private javax.swing.JTextField campoNome;
    private javax.swing.JTextField campoPorcao;
    private javax.swing.JTextField campoProteina;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    // End of variables declaration
    }

}